[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sangin Kim. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim S (2025). beacon: BEACON: Burst Event Anomaly Clustering Outlier Notification. R package version 0.0.1.","code":"@Manual{,   title = {beacon: BEACON: Burst Event Anomaly Clustering and Outlier Notification},   author = {Sangin Kim},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"beacon-burst-event-anomaly-clustering-and-outlier-notification","dir":"","previous_headings":"","what":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"BEACON fully data-driven pipeline designed detect unmodeled gravitational wave (GW) transients. combining sequential autoregressive modeling (seqARIMA) anomaly clustering, BEACON provides low-latency model-agnostic framework robust burst detection.","code":""},{"path":"/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"Denoising via seqARIMA modeling (seqarima) Anomaly Detection using robust IQR-based statistical thresholds Clustering temporal outliers DBSCAN Statistical Evaluation via Poisson Exponential models Coincidence Analysis across multiple detectors Fully compatible streaming batch-based analysis","code":""},{"path":"/index.html","id":"pipeline-overview","dir":"","previous_headings":"","what":"Pipeline Overview","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"","code":"┌─────────────────────────┐                   │        seqARIMA         │◀─── Denoising (seqarima)                   └───────────┬─────────────┘                               ↓                   ┌─────────────────────────┐                   │    Anomaly Detection    │◀─── IQR method                   └───────────┬─────────────┘                               ↓                   ┌─────────────────────────┐                   │       Clustering        │◀─── DBSCAN clustering                   └───────────┬─────────────┘                               ↓                   ┌─────────────────────────┐                   │ Significance Evaluation │◀─── Significance (λₐ, λ꜀)                   └───────────┬─────────────┘                               ↓                   ┌─────────────────────────┐                   │  Coincidence Analysis   │◀─── Across detectors                   └─────────────────────────┘"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"","code":"# In R # If `devtools` is not installed # install.packages(“devtools”) devtools::install_github(     repo = \"https://github.com/OddThumb/beacon.git\",     upgrade = \"never\" ) git clone https://github.com/OddThumb/beacon.git cd beacon  # In R devtools::install(\".\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"⚠️ Note1: plan use PyCBC backend (e.g. functions R/use_pycbc.R), make sure link environment PyCBC installed. can specifying path conda environment shown : ⚠️ Note2: sophisticated vignettes detailed usage delivered soon.","code":"# R Example library(beacon)  # Load GW strain data ts_H1 <- read_H5(\"H1.hdf5\", sampling.freq = 4096) ts_L1 <- read_H5(\"L1.hdf5\", sampling.freq = 4096) ts_list <- list(\"H1\" = ts_H1, \"L1\" = ts_L1)  # Data batch preparation batch_set <- batching.network(ts_list)  # Configure pipeline cfg <- config_pipe()  # Run detection pipeline result <- stream(batch_set = batch_set, arch_params = cfg)  # In console,  # 1-th batch: #   H1: λ_c=6.403, λ_N=3.333 #   L1: λ_c=6.445, λ_N=3.337 # 2-th batch: #   H1: λ_c=6.403, λ_N=3.333 #   L1: λ_c=6.445, λ_N=3.337 # ... # Install reticulate to incorporate python package install.packages(\"reticulate\")  # Register your conda envrionment path reticulate::use_condaenv(condaenv = \"path/to/your/conda/env\")"},{"path":"/index.html","id":"python-version","dir":"","previous_headings":"","what":"Python Version","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"⚙️ Python Version (Progress): Python version BEACON pipeline currently active development. core design ported R, Python version support sequential anomaly detection clustering logic. Stay tuned updates repository 🔥.","code":""},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"Full function documentation provided via Roxygen2 R source files. Python bindings () follow NumPy-style docstrings.","code":""},{"path":"/index.html","id":"example-datasets","dir":"","previous_headings":"","what":"Example Datasets","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"See data/ use GWOSC compatible tools fetch real event data. data can downloaded via list_event() download_event().","code":""},{"path":"/index.html","id":"publications","dir":"","previous_headings":"","what":"Publications","title":"BEACON: Burst Event Anomaly Clustering and Outlier Notification","text":"use BEACON work, please cite: Kim et al., “Autoregressive Search Gravitational Waves: Design low-latency search pipeline unmodeled transients — BEACON”, prep. use seqarima work, please cite: Kim et al., PRD, 2024, “Autoregressive Search Gravitational Waves: Denoising”.","code":""},{"path":"/reference/ACF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Auto Correlation Function (ACF) — ACF","title":"Plot Auto Correlation Function (ACF) — ACF","text":"Compute visualize autocorrelation function time series.","code":""},{"path":"/reference/ACF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Auto Correlation Function (ACF) — ACF","text":"","code":"ACF(ts, lag.max = length(ts), plot = TRUE, title = NULL)"},{"path":"/reference/ACF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Auto Correlation Function (ACF) — ACF","text":"ts numeric vector time-series object. lag.max integer specifying maximum lag compute ACF. Default length `ts`. plot logical. TRUE (default), return ggplot2 object visualization. title optional string set plot title.","code":""},{"path":"/reference/ACF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Auto Correlation Function (ACF) — ACF","text":"`plot = TRUE`, list : acf object class \"acf\" added element `white95ci` (significance threshold). plot ggplot2 object showing autocorrelation function. Otherwise, returns \"acf\" object .","code":""},{"path":"/reference/Autoregressive.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit AR model using either single or ensemble approach — Autoregressive","title":"Fit AR model using either single or ensemble approach — Autoregressive","text":"Fit AR model using either single ensemble approach","code":""},{"path":"/reference/Autoregressive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit AR model using either single or ensemble approach — Autoregressive","text":"","code":"Autoregressive(ts, p, aic = TRUE, verbose = TRUE, ...)"},{"path":"/reference/Autoregressive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit AR model using either single or ensemble approach — Autoregressive","text":"ts `ts` object. p AR order(s). aic Use AIC. verbose Verbose output. ... Additional args.","code":""},{"path":"/reference/Autoregressive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit AR model using either single or ensemble approach — Autoregressive","text":"Residual `ts` object AR metadata.","code":""},{"path":"/reference/BandPass.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply band-pass filter to `ts` — BandPass","title":"Apply band-pass filter to `ts` — BandPass","text":"Apply band-pass filter `ts`","code":""},{"path":"/reference/BandPass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply band-pass filter to `ts` — BandPass","text":"","code":"BandPass(   ts,   fl = NULL,   fu = NULL,   resp = \"FIR\",   filt_order = NULL,   verbose = T )"},{"path":"/reference/BandPass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply band-pass filter to `ts` — BandPass","text":"ts `ts` object. fl numeric. Lower cutoff frequency. fu numeric. Upper cutoff frequency. resp character. Filter type (\"FIR\" \"IIR\"). filt_order numeric. Filter order (default: 512 FIR, 8 IIR). verbose Logical. TRUE, print filter info.","code":""},{"path":"/reference/BandPass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply band-pass filter to `ts` — BandPass","text":"band-pass filtered `ts` object attributes.","code":""},{"path":"/reference/C.Burg.html","id":null,"dir":"Reference","previous_headings":"","what":"AR Burg core (.Call) — C.Burg","title":"AR Burg core (.Call) — C.Burg","text":"AR Burg core (.Call)","code":""},{"path":"/reference/C.Burg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AR Burg core (.Call) — C.Burg","text":"","code":"C.Burg(x, order.max)"},{"path":"/reference/C.Burg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AR Burg core (.Call) — C.Burg","text":"x numeric vector (time series) order.max integer, maximum AR order","code":""},{"path":"/reference/C.Burg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AR Burg core (.Call) — C.Burg","text":"list(coefs = p x p numeric matrix, var.pred1 = numeric(p+1), var.pred2 = numeric(p+1))","code":""},{"path":"/reference/CCF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cross Correlation Function (CCF) — CCF","title":"Plot Cross Correlation Function (CCF) — CCF","text":"Compute optionally visualize cross-correlation function two time series.","code":""},{"path":"/reference/CCF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cross Correlation Function (CCF) — CCF","text":"","code":"CCF(   ts1,   ts2,   lag.max = length(ts1),   na.action = na.fail,   title = NULL,   plot = TRUE,   save = FALSE,   dir = NULL,   prefix = NULL,   times = NULL )"},{"path":"/reference/CCF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cross Correlation Function (CCF) — CCF","text":"ts1 First numeric vector time-series object. ts2 Second numeric vector time-series object. lag.max Maximum lag compute. Default length `ts1`. na.action NA handling function. Default `na.fail`. title Optional plot title. plot Logical. TRUE (default), return ggplot2 object. save Logical. TRUE, save plot 'CCF.pdf'. Default FALSE. dir Optional directory save plot (currently ignored unless customized `savefig()`). prefix Optional prefix filename (currently ignored unless used `savefig()`). times Optional numeric vector used convert inputs ts objects already.","code":""},{"path":"/reference/CCF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Cross Correlation Function (CCF) — CCF","text":"list containing: ccf_res CCF computation result added `white95ci`. ind_max Index lag highest absolute cross-correlation. ccf_max Value maximum absolute cross-correlation. lag_max Lag maximum absolute cross-correlation occurs. plot ggplot2 object, `plot = TRUE`.","code":""},{"path":"/reference/DQ_Dec2Bits.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Decimal DQ Flag to Bit Representation — DQ_Dec2Bits","title":"Convert Decimal DQ Flag to Bit Representation — DQ_Dec2Bits","text":"Convert Decimal DQ Flag Bit Representation","code":""},{"path":"/reference/DQ_Dec2Bits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Decimal DQ Flag to Bit Representation — DQ_Dec2Bits","text":"","code":"DQ_Dec2Bits(decimal.dq, len = 7)"},{"path":"/reference/DQ_Dec2Bits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Decimal DQ Flag to Bit Representation — DQ_Dec2Bits","text":"decimal.dq integer. Decimal representation DQ flag. len integer (default: 7). Number bits extract.","code":""},{"path":"/reference/DQ_Dec2Bits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Decimal DQ Flag to Bit Representation — DQ_Dec2Bits","text":"integer vector length len containing bitwise flags.","code":""},{"path":"/reference/DQ_ShortNames.html","id":null,"dir":"Reference","previous_headings":"","what":"List of DQ Bit Names with Their Bit Positions — DQ_ShortNames","title":"List of DQ Bit Names with Their Bit Positions — DQ_ShortNames","text":"List DQ Bit Names Bit Positions","code":""},{"path":"/reference/DQ_ShortNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of DQ Bit Names with Their Bit Positions — DQ_ShortNames","text":"","code":"DQ_ShortNames()"},{"path":"/reference/DQ_ShortNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of DQ Bit Names with Their Bit Positions — DQ_ShortNames","text":"integer-named character vector indicating short names bit index.","code":""},{"path":"/reference/DQ_ShortNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of DQ Bit Names with Their Bit Positions — DQ_ShortNames","text":"default mapping : DATA       = 0 CBC_CAT1   = 1 CBC_CAT2   = 2 CBC_CAT3   = 3 BURST_CAT1 = 4 BURST_CAT2 = 5 BURST_CAT3 = 6","code":""},{"path":"/reference/DQlev.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Specific DQ Level from Decimal Flag — DQlev","title":"Extract Specific DQ Level from Decimal Flag — DQlev","text":"Extract Specific DQ Level Decimal Flag","code":""},{"path":"/reference/DQlev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Specific DQ Level from Decimal Flag — DQlev","text":"","code":"DQlev(dq, level = \"BURST_CAT2\")"},{"path":"/reference/DQlev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Specific DQ Level from Decimal Flag — DQlev","text":"dq integer. Decimal DQ flag. level character string. DQ level extract (e.g., \"BURST_CAT2\" \"\").","code":""},{"path":"/reference/DQlev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Specific DQ Level from Decimal Flag — DQlev","text":"level = \"\", returns named integer vector bit flags. Otherwise, returns scalar (0 1) indicating presence selected DQ level.","code":""},{"path":"/reference/Differencing.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference a time series manually or automatically — Differencing","title":"Difference a time series manually or automatically — Differencing","text":"Difference time series manually automatically","code":""},{"path":"/reference/Differencing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference a time series manually or automatically — Differencing","text":"","code":"Differencing(ts, d, t.seg = 0.5, return.pvals = FALSE, verbose = TRUE)"},{"path":"/reference/Differencing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference a time series manually or automatically — Differencing","text":"ts `ts` object. d Differencing order. Use 0 none, integer fixed, 'auto' automatic. t.seg Segment duration. return.pvals Return KPSS p-values. verbose Whether print messages.","code":""},{"path":"/reference/Differencing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference a time series manually or automatically — Differencing","text":"differenced `ts` object metadata.","code":""},{"path":"/reference/MovingAverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply MA or EoA depending on `q` — MovingAverage","title":"Apply MA or EoA depending on `q` — MovingAverage","text":"Apply MA EoA depending `q`","code":""},{"path":"/reference/MovingAverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply MA or EoA depending on `q` — MovingAverage","text":"","code":"MovingAverage(ts, q, verbose = TRUE, ...)"},{"path":"/reference/MovingAverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply MA or EoA depending on `q` — MovingAverage","text":"ts `ts` object. q MA order(s). verbose Verbose output. ... Additional args passed `eoa()`.","code":""},{"path":"/reference/MovingAverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply MA or EoA depending on `q` — MovingAverage","text":"Smoothed `ts` object.","code":""},{"path":"/reference/PACF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Partial Auto Correlation Function (PACF) — PACF","title":"Plot Partial Auto Correlation Function (PACF) — PACF","text":"Compute visualize partial autocorrelation function time series.","code":""},{"path":"/reference/PACF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Partial Auto Correlation Function (PACF) — PACF","text":"","code":"PACF(ts, lag.max = length(ts), plot = TRUE, title = NULL)"},{"path":"/reference/PACF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Partial Auto Correlation Function (PACF) — PACF","text":"ts numeric vector time-series object. lag.max integer specifying maximum lag compute PACF. Default length `ts`. plot logical. TRUE (default), return ggplot2 object visualization. title optional string set plot title.","code":""},{"path":"/reference/PACF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Partial Auto Correlation Function (PACF) — PACF","text":"`plot = TRUE`, list : pacf object class \"acf\" type \"partial\", including `white95ci`. plot ggplot2 object showing partial autocorrelation function. Otherwise, returns PACF object .","code":""},{"path":"/reference/Significance.html","id":null,"dir":"Reference","previous_headings":"","what":"Detection Significance from Probability — Significance","title":"Detection Significance from Probability — Significance","text":"Compute detection significance probability using logarithmic scale.","code":""},{"path":"/reference/Significance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detection Significance from Probability — Significance","text":"","code":"Significance(P, a = 2.3)"},{"path":"/reference/Significance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detection Significance from Probability — Significance","text":"P numeric vector probability values. positive scalar (default: 2.3). Scaling factor significance.","code":""},{"path":"/reference/Significance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detection Significance from Probability — Significance","text":"numeric vector representing detection statistic, \\(-\\cdot \\log_{10}(P)\\).","code":""},{"path":"/reference/Significance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detection Significance from Probability — Significance","text":"function transforms small probabilities large detection scores. Commonly used significance evaluation.","code":""},{"path":"/reference/add_DQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Add DQ information to the processed data — add_DQ","title":"Add DQ information to the processed data — add_DQ","text":"Adds data quality (DQ) mask information `proc` data frame, based DQ information stored current batch (`curr_batch`). function aligns DQ values flooring GPS timestamp performs sampling rate adjustments necessary.","code":""},{"path":"/reference/add_DQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add DQ information to the processed data — add_DQ","text":"","code":"add_DQ(proc, curr_batch)"},{"path":"/reference/add_DQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add DQ information to the processed data — add_DQ","text":"proc data frame containing processed anomaly signal data, must include `GPS` column. curr_batch `ts` object `dqmask` `dq.lev` attributes, representing DQ mask level.","code":""},{"path":"/reference/add_DQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add DQ information to the processed data — add_DQ","text":"`data.frame` additional columns corresponding DQ flags. dq.lev = \"\", available DQ channels appended. Otherwise, specified level added.","code":""},{"path":"/reference/add_P0.html","id":null,"dir":"Reference","previous_headings":"","what":"Add combined significance probability P0 — add_P0","title":"Add combined significance probability P0 — add_P0","text":"Computes joint significance probability \\(\\mathbb{P}_0 = P_{\\text{Pois}} \\cdot P_{\\text{Exp}}\\) anomalous cluster. computed rows `anomaly == 1`.","code":""},{"path":"/reference/add_P0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add combined significance probability P0 — add_P0","text":"","code":"add_P0(proc)"},{"path":"/reference/add_P0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add combined significance probability P0 — add_P0","text":"proc dataframe `Ppois`, `Pexp`, `anomaly` columns.","code":""},{"path":"/reference/add_P0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add combined significance probability P0 — add_P0","text":"input dataframe added `P0` column.","code":""},{"path":"/reference/add_P0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add combined significance probability P0 — add_P0","text":"computation, rowwise structure removed avoid unintended behavior subsequent operations.","code":""},{"path":"/reference/add_P0_DQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Add P0_DQ mask to processed data — add_P0_DQ","title":"Add P0_DQ mask to processed data — add_P0_DQ","text":"Adds masked version P0 column (e.g., false alarm probability) based duty cycle specified DQ flags. DQ flag indicates downtime (DQ == 0), corresponding P0 value replaced NA.","code":""},{"path":"/reference/add_P0_DQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add P0_DQ mask to processed data — add_P0_DQ","text":"","code":"add_P0_DQ(proc, DQ = \"BURST_CAT2\")"},{"path":"/reference/add_P0_DQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add P0_DQ mask to processed data — add_P0_DQ","text":"proc data frame containing processed anomaly data P0 column one DQ columns. DQ character vector one DQ channel names. Defaults \"BURST_CAT2\".","code":""},{"path":"/reference/add_P0_DQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add P0_DQ mask to processed data — add_P0_DQ","text":"`data.frame` added column(s) P0_<DQ> contain P0 values masked duty cycle flags.","code":""},{"path":"/reference/add_Pexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Add exponential inter-cluster probability — add_Pexp","title":"Add exponential inter-cluster probability — add_Pexp","text":"Computes adds exponential CDF-based column `Pexp` anomaly dataframe, representing probability \\(P(t \\le T)\\) cluster's inter-cluster gap \\(t_{\\rm lag}\\).","code":""},{"path":"/reference/add_Pexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add exponential inter-cluster probability — add_Pexp","text":"","code":"add_Pexp(proc, updated_stat)"},{"path":"/reference/add_Pexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add exponential inter-cluster probability — add_Pexp","text":"proc dataframe anomaly pipeline containing `t_lag`. updated_stat list containing `stats$lambda_c`, typically returned `update_stat()` `update_logic()`.","code":""},{"path":"/reference/add_Pexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add exponential inter-cluster probability — add_Pexp","text":"input dataframe added `Pexp` column.","code":""},{"path":"/reference/add_Pexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add exponential inter-cluster probability — add_Pexp","text":"calculated pexp(t_lag, lambda_c) lambda_c cluster rate estimated updated_stat.","code":""},{"path":"/reference/add_Ppois.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Poisson anomaly-tail probability to dataframe — add_Ppois","title":"Add Poisson anomaly-tail probability to dataframe — add_Ppois","text":"Computes appends new column `Ppois` processed anomaly dataframe, representing Poisson-tail probability \\(P(n \\ge N_{\\rm anom})\\) using current estimated rate \\(\\lambda_a\\) `updated_stat`.","code":""},{"path":"/reference/add_Ppois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Poisson anomaly-tail probability to dataframe — add_Ppois","text":"","code":"add_Ppois(proc, updated_stat)"},{"path":"/reference/add_Ppois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Poisson anomaly-tail probability to dataframe — add_Ppois","text":"proc dataframe pipeline output containing `N_anom` per cluster. updated_stat list containing `stats$lambda_a`, typically returned `update_stat()` `update_logic()`.","code":""},{"path":"/reference/add_Ppois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Poisson anomaly-tail probability to dataframe — add_Ppois","text":"input dataframe `proc` added `Ppois` column.","code":""},{"path":"/reference/add_Pstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Add full statistical significance fields (Ppois, Pexp, P0) — add_Pstats","title":"Add full statistical significance fields (Ppois, Pexp, P0) — add_Pstats","text":"Adds cluster-level significance probabilities—Poisson (`Ppois`), exponential (`Pexp`), product (`P0`)—anomaly dataframe one step.","code":""},{"path":"/reference/add_Pstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add full statistical significance fields (Ppois, Pexp, P0) — add_Pstats","text":"","code":"add_Pstats(proc, stat)"},{"path":"/reference/add_Pstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add full statistical significance fields (Ppois, Pexp, P0) — add_Pstats","text":"proc dataframe detected anomaly clusters. stat list containing lambda statistics, output update_stat() update_logic().","code":""},{"path":"/reference/add_Pstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add full statistical significance fields (Ppois, Pexp, P0) — add_Pstats","text":"input dataframe added `Ppois`, `Pexp`, `P0` columns.","code":""},{"path":"/reference/add_Pstats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add full statistical significance fields (Ppois, Pexp, P0) — add_Pstats","text":"function wraps add_Ppois(), add_Pexp(), add_P0().","code":""},{"path":"/reference/add_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Join cluster-level statistics into proc dataframe — add_stat","title":"Join cluster-level statistics into proc dataframe — add_stat","text":"Merges output `stat_anom()` anomaly dataframe based `cluster` ID. added columns include `t_cen`, `N_anom`, `t_lag`, relocated appear immediately `cluster` column.","code":""},{"path":"/reference/add_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join cluster-level statistics into proc dataframe — add_stat","text":"","code":"add_stat(proc, stat_table)"},{"path":"/reference/add_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join cluster-level statistics into proc dataframe — add_stat","text":"proc dataframe anomaly detection results, containing `cluster` column. stat_table dataframe containing cluster-level statistics `stat_anom()$table`.","code":""},{"path":"/reference/add_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join cluster-level statistics into proc dataframe — add_stat","text":"dataframe added cluster statistics aligned cluster ID.","code":""},{"path":"/reference/adjust_proc.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust anomaly detection results for current batch — adjust_proc","title":"Adjust anomaly detection results for current batch — adjust_proc","text":"Filters shifts anomaly detection results (`proc`) align time window current batch. Optionally includes earlier values compensate tail-side loss due moving average smoothing.","code":""},{"path":"/reference/adjust_proc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust anomaly detection results for current batch — adjust_proc","text":"","code":"adjust_proc(proc, curr_batch, n_missed)"},{"path":"/reference/adjust_proc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust anomaly detection results for current batch — adjust_proc","text":"proc data frame returned anomaly detection, including `GPS` `cluster` columns. curr_batch `ts` object current batch, used define time bounds. n_missed list indicating many time points include current batch (e.g., `n_missed[[\"Mt\"]]` due moving average tail loss).","code":""},{"path":"/reference/adjust_proc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust anomaly detection results for current batch — adjust_proc","text":"filtered adjusted data frame corrected cluster indices time span.","code":""},{"path":"/reference/adjust_proc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust anomaly detection results for current batch — adjust_proc","text":"Specifically: - Crops `proc` include time values within current batch range   (optionally extended backward `n_missed[[\"Mt\"]]` points). - anomalies exist, shifts cluster labels ensure start 1.","code":""},{"path":"/reference/amax.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate maximum of absolute values — amax","title":"Calculate maximum of absolute values — amax","text":"Calculate maximum absolute values","code":""},{"path":"/reference/amax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate maximum of absolute values — amax","text":"","code":"amax(x, na.rm = T)"},{"path":"/reference/amax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate maximum of absolute values — amax","text":"x numeric vector. na.rm logical (default: TRUE). Whether remove NA values.","code":""},{"path":"/reference/amax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate maximum of absolute values — amax","text":"numeric. maximum absolute values.","code":""},{"path":"/reference/amin.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate minimum of absolute values — amin","title":"Calculate minimum of absolute values — amin","text":"Calculate minimum absolute values","code":""},{"path":"/reference/amin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate minimum of absolute values — amin","text":"","code":"amin(x, na.rm = T)"},{"path":"/reference/amin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate minimum of absolute values — amin","text":"x numeric vector. na.rm logical (default: TRUE). Whether remove NA values.","code":""},{"path":"/reference/amin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate minimum of absolute values — amin","text":"numeric. minimum absolute values.","code":""},{"path":"/reference/anomalize2.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","title":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","text":"Applies outlier detection specified column data frame using either IQR-based robust GESD-based method. Returns original data frame augmented anomaly indicators detection thresholds.","code":""},{"path":"/reference/anomalize2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","text":"","code":"anomalize2(   data,   target,   method = c(\"iqr\", \"gesd\"),   alpha = 0.05,   max_anoms = 0.2,   verbose = FALSE )"},{"path":"/reference/anomalize2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","text":"data data.frame tibble. Input dataset containing numeric column analyzed. target Unquoted column name. Target column apply anomaly detection . method character. Outlier detection method. One \"iqr\" \"gesd\". alpha numeric (default: 0.05). Significance level used detection threshold. max_anoms numeric 0 1 (default: 0.2). Maximum fraction data points allowed anomalous. verbose Logical (default: FALSE). TRUE, returns list including detailed results.","code":""},{"path":"/reference/anomalize2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","text":"verbose = FALSE, returns input data frame : <target>_l1 Lower bound anomaly detection range. <target>_l2 Upper bound anomaly detection range. anomaly Binary indicator: 1 anomaly, 0 otherwise. verbose = TRUE, returns list : anomalized_tbl Augmented data frame described . anomaly_details Full output iqr2() gesd2().","code":""},{"path":"/reference/anomalize2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","text":"function adapted anomalize’s anomalize() internally uses custom implementations iqr2() gesd2() robust outlier detection. Unlike original version, implementation: Returns binary flags (0 1) anomalies instead \"Yes\"/\"\" strings. implemented without pipe operators simplicity compatibility. two available methods : IQR: Anomaly detection based interquartile range thresholds. GESD: Generalized Extreme Studentized Deviate test robust statistics (median, MAD).","code":""},{"path":"/reference/anomalize2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect anomalies in a data frame column using robust statistical methods — anomalize2","text":"Adapted anomalize::anomalize(): https://business-science.github.io/anomalize/reference/anomalize.html","code":""},{"path":[]},{"path":"/reference/anomaly.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect anomalies in time series using robust methods — anomaly","title":"Detect anomalies in time series using robust methods — anomaly","text":"Applies anomaly detection ts object using either direct decomposition-based methods. Internally uses customized version anomalize logic robust thresholding.","code":""},{"path":"/reference/anomaly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect anomalies in time series using robust methods — anomaly","text":"","code":"anomaly(   ts,   max.anom = 100,   scale = 1.5,   method = \"iqr\",   decomp = NULL,   tzero = 0 )"},{"path":"/reference/anomaly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect anomalies in time series using robust methods — anomaly","text":"ts ts object. Input time series data. max.anom integer (default: 100). Maximum number anomalies allowed. scale numeric (default: 1.5). Controls IQR scaling factor. Corresponds standard 1.5×IQR rule. Internally converted alpha = 0.15 / scale compatibility anomalize2(). method character. Outlier detection method passed anomalize2. One \"iqr\" \"gesd\". decomp character NULL. Optional decomposition method time series. One \"stl\", \"twitter\", etc., NULL decomposition. specified, decomposes time series using anomalize's time_decompose(). tzero numeric (default: 0). Ignored. Included compatibility pipeline functions.","code":""},{"path":"/reference/anomaly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect anomalies in time series using robust methods — anomaly","text":"tibble original time series added columns: observed Original input values. <observed>_l1, <observed>_l2 Lower upper bounds anomaly detection. anomaly Anomaly flag: 1 anomaly, 0 otherwise. (Optional) Additional decomposition columns: trend, season, remainder decomp used.","code":""},{"path":"/reference/anomaly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect anomalies in time series using robust methods — anomaly","text":"function builds anomalize replacing default anomaly detection customized functions iqr2 gesd2, return binary anomaly indicators (0 1). Pipe operators used. scale parameter internally translated significance level using formula: alpha = 0.15 / scale. decomp specified, function decomposes time series trend, seasonal, remainder components, estimates trend period automatically via ACF using decomp_freq_trend, applies anomaly detection remainder component . final result recomposed using time_recompose().","code":""},{"path":[]},{"path":"/reference/anomaly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect anomalies in time series using robust methods — anomaly","text":"","code":"if (FALSE) { # \\dontrun{ x <- ts(c(rnorm(100), 10, 15), frequency = 1) anomaly(x, method = \"iqr\") anomaly(x, method = \"gesd\", scale = 2) } # }"},{"path":"/reference/append.line.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a Line to an Existing File — append.line","title":"Append a Line to an Existing File — append.line","text":"Append content file optionally print .","code":""},{"path":"/reference/append.line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a Line to an Existing File — append.line","text":"","code":"append.line(x, file, show = T)"},{"path":"/reference/append.line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a Line to an Existing File — append.line","text":"x character object write. file character string specifying file path. show Logical; TRUE, print file content (default: TRUE).","code":""},{"path":"/reference/append.line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a Line to an Existing File — append.line","text":"None.","code":""},{"path":"/reference/append_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Append NA placeholders to result list — append_NA","title":"Append NA placeholders to result list — append_NA","text":"Appends placeholder entries `NA` values result list standard structure. Typically used anomaly detection results absent.","code":""},{"path":"/reference/append_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append NA placeholders to result list — append_NA","text":"","code":"append_NA(res.list)"},{"path":"/reference/append_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append NA placeholders to result list — append_NA","text":"res.list named list appended NA values.","code":""},{"path":"/reference/append_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append NA placeholders to result list — append_NA","text":"input list additional elements: stat, lamb, prob, proc, updated_stat, current_stat, set `NA` `list(N = NA, c = NA)`.","code":""},{"path":"/reference/apply_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA with fixed sign for interpretability — apply_pca","title":"Perform PCA with fixed sign for interpretability — apply_pca","text":"Perform PCA fixed sign interpretability","code":""},{"path":"/reference/apply_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA with fixed sign for interpretability — apply_pca","text":"","code":"apply_pca(x, retx = T, center = F, scale. = F, tol = NULL, rank. = NULL, ...)"},{"path":"/reference/apply_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA with fixed sign for interpretability — apply_pca","text":"x data frame matrix. retx, center, scale., tol, rank., ... Passed `prcomp()`.","code":""},{"path":"/reference/apply_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PCA with fixed sign for interpretability — apply_pca","text":"modified PCA object signs adjusted.","code":""},{"path":"/reference/arch.html","id":null,"dir":"Reference","previous_headings":"","what":"Run full architecture: denoising, anomaly detection, and clustering — arch","title":"Run full architecture: denoising, anomaly detection, and clustering — arch","text":"Applies full analysis pipeline time series: denoising via seqarima(), anomaly detection via anomaly(), clustering anomalies via run_dbscan().","code":""},{"path":"/reference/arch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run full architecture: denoising, anomaly detection, and clustering — arch","text":"","code":"arch(ts, params)"},{"path":"/reference/arch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run full architecture: denoising, anomaly detection, and clustering — arch","text":"ts time series (`ts`) object. params list containing configuration parameters. following fields supported: d_max: Differencing order. p_max: AR order. q_max: MA order. fl, fu: Lower upper cutoff frequencies band-pass filter. nmax: Maximum number anomalies detect (default: 100). scale: IQR multiplier outlier threshold (default: 1.5). method: Anomaly detection method; one \"iqr\" \"gesd\". decomp: Optional time decomposition method; one \"stl\", \"twitter\", NULL. eps: Epsilon value DBSCAN clustering.","code":""},{"path":"/reference/arch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run full architecture: denoising, anomaly detection, and clustering — arch","text":"tibble containing: time, observed: Processed time signal values. raw: Original (pre-denoising) signal. anomaly: Anomaly indicator (1 = anomalous, 0 = normal). cluster: DBSCAN cluster label (NA non-anomalous points). GPS: GPS time stamps.","code":""},{"path":"/reference/arch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run full architecture: denoising, anomaly detection, and clustering — arch","text":"","code":"if (FALSE) { # \\dontrun{ # Generate synthetic time series fs <- 4096 t <- seq(0, 1, by = 1 / fs) x <- sin(2 * pi * 60 * t) + rnorm(length(t), sd = 0.5) ts_obj <- ts(x, start = t[1], frequency = fs)  # Get default parameter set params <- config_pipe()  # Run full analysis architecture result <- arch(ts_obj, params) head(result) } # }"},{"path":"/reference/ari_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic Mean Ignoring NA — ari_mean","title":"Arithmetic Mean Ignoring NA — ari_mean","text":"Compute arithmetic mean numeric vector, ignoring NA values.","code":""},{"path":"/reference/ari_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic Mean Ignoring NA — ari_mean","text":"","code":"ari_mean(x)"},{"path":"/reference/ari_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic Mean Ignoring NA — ari_mean","text":"x numeric vector.","code":""},{"path":"/reference/ari_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic Mean Ignoring NA — ari_mean","text":"numeric scalar representing mean.","code":""},{"path":"/reference/as_tbt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert `ts` to tibbletime object — as_tbt","title":"Convert `ts` to tibbletime object — as_tbt","text":"Convert `ts` tibbletime object","code":""},{"path":"/reference/as_tbt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert `ts` to tibbletime object — as_tbt","text":"","code":"as_tbt(ts, time_col = \"time\", val_col = \"x\")"},{"path":"/reference/as_tbt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert `ts` to tibbletime object — as_tbt","text":"ts `ts` object. time_col character. Column name time (default: \"time\"). val_col character. Column name value (default: \"x\").","code":""},{"path":"/reference/as_tbt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert `ts` to tibbletime object — as_tbt","text":"tbl_time object.","code":""},{"path":"/reference/auto_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically determine differencing order via KPSS — auto_diff","title":"Automatically determine differencing order via KPSS — auto_diff","text":"Automatically determine differencing order via KPSS","code":""},{"path":"/reference/auto_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically determine differencing order via KPSS — auto_diff","text":"","code":"auto_diff(ts, t.seg = 0.5, d_max = 2, verbose = TRUE)"},{"path":"/reference/auto_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically determine differencing order via KPSS — auto_diff","text":"ts `ts` object. t.seg Segment duration. d_max Maximum differencing order. verbose Whether print messages.","code":""},{"path":"/reference/auto_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically determine differencing order via KPSS — auto_diff","text":"list selected order, differenced output, KPSS p-values.","code":""},{"path":"/reference/batching.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a time series into fixed-length batches — batching","title":"Split a time series into fixed-length batches — batching","text":"Divides ts object equal-length segments (batches) duration t_bch seconds. dqmask attribute present .DQ = TRUE, also split attached batch.","code":""},{"path":"/reference/batching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a time series into fixed-length batches — batching","text":"","code":"batching(ts, t_bch = 1, has.DQ = T)"},{"path":"/reference/batching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a time series into fixed-length batches — batching","text":"ts ts object optional dqmask attribute. t_bch numeric. Desired batch length seconds (default: 1). .DQ Logical (default: TRUE). Whether also batch dqmask attribute present.","code":""},{"path":"/reference/batching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a time series into fixed-length batches — batching","text":"named list ts objects, representing batch. .DQ = TRUE dqmask exists,         batch dqmask dq.lev attributes.","code":""},{"path":"/reference/batching.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a time series into fixed-length batches — batching","text":"function computes number batches round(tl(ts) / t_bch) tl(ts) total duration. time series evenly split based index, assuming uniform sampling. dqmask present input ts, divided row-wise element-wise depending structure, aligned corresponding time range batch.","code":""},{"path":[]},{"path":"/reference/batching.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a time series into fixed-length batches — batching","text":"","code":"if (FALSE) { # \\dontrun{ batched <- batching(my_ts, t_bch = 2) length(batched) # number of batches attr(batched[[1]], \"dqmask\") # DQ mask for first batch } # }"},{"path":"/reference/batching.network.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform batching and NA filtering for multiple ts objects — batching.network","title":"Perform batching and NA filtering for multiple ts objects — batching.network","text":"Perform batching NA filtering multiple ts objects","code":""},{"path":"/reference/batching.network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform batching and NA filtering for multiple ts objects — batching.network","text":"","code":"batching.network(ts.list, t_bch = 1, has.DQ = TRUE)"},{"path":"/reference/batching.network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform batching and NA filtering for multiple ts objects — batching.network","text":"ts.list named list `ts` objects, one per detector t_bch Batch length seconds (default: 1) .DQ Logical; whether use DQ mask batching (default: TRUE)","code":""},{"path":"/reference/batching.network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform batching and NA filtering for multiple ts objects — batching.network","text":"reshaped list valid (non-NaN) batches detectors","code":""},{"path":"/reference/beacon-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A short title line describing what the package does — beacon-package","title":"A short title line describing what the package does — beacon-package","text":"detailed description package . length   one five lines recommended.","code":""},{"path":"/reference/beacon-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A short title line describing what the package does — beacon-package","text":"section provide detailed overview use   package, including important functions.","code":""},{"path":"/reference/beacon-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A short title line describing what the package does — beacon-package","text":"Name, email optional. Maintainer: Name <@email.com>","code":""},{"path":"/reference/beacon-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A short title line describing what the package does — beacon-package","text":"optional section can contain literature references   background information.","code":""},{"path":[]},{"path":"/reference/beacon-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A short title line describing what the package does — beacon-package","text":"","code":"if (FALSE) { # \\dontrun{      ## Optional simple examples of the most important functions      ## These can be in \\dontrun{} and \\donttest{} blocks.      } # }"},{"path":"/reference/burgar.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit AR model using modified Burg method — burgar","title":"Fit AR model using modified Burg method — burgar","text":"Fit AR model using modified Burg method","code":""},{"path":"/reference/burgar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit AR model using modified Burg method — burgar","text":"","code":"burgar(   x,   ic = TRUE,   order.max = NULL,   na.action = na.fail,   demean = TRUE,   series = NULL,   var.method = 2L,   numCores = NULL,   ... )"},{"path":"/reference/burgar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit AR model using modified Burg method — burgar","text":"x `ts` object. ic Information criterion: logical character. order.max Maximum AR order. na.action handle NA. demean Whether subtract mean. series Series name. var.method Method innovation variance. numCores integer. number cores fast embed C++ (See `embedParallelCpp()`). ... Additional args.","code":""},{"path":"/reference/burgar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit AR model using modified Burg method — burgar","text":"`ar` object.","code":""},{"path":"/reference/ceiling_digit.html","id":null,"dir":"Reference","previous_headings":"","what":"Ceiling with Decimal Digits — ceiling_digit","title":"Ceiling with Decimal Digits — ceiling_digit","text":"Applies ceiling() function number precision controlled number digits.","code":""},{"path":"/reference/ceiling_digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ceiling with Decimal Digits — ceiling_digit","text":"","code":"ceiling_digit(x, digits = 0)"},{"path":"/reference/ceiling_digit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ceiling with Decimal Digits — ceiling_digit","text":"x numeric value vector. digits Integer (default: 0). Number decimal digits retain.","code":""},{"path":"/reference/ceiling_digit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ceiling with Decimal Digits — ceiling_digit","text":"numeric vector values ceiled specified digits.","code":""},{"path":"/reference/check_normality.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for normality using the Anderson-Darling test — check_normality","title":"Check for normality using the Anderson-Darling test — check_normality","text":"Check normality using Anderson-Darling test","code":""},{"path":"/reference/check_normality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for normality using the Anderson-Darling test — check_normality","text":"","code":"check_normality(ts, t.seg = 0.5)"},{"path":"/reference/check_normality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for normality using the Anderson-Darling test — check_normality","text":"ts `ts` object. t.seg Segment duration seconds.","code":""},{"path":"/reference/check_normality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for normality using the Anderson-Darling test — check_normality","text":"numeric vector p-values.","code":""},{"path":"/reference/check_stationary.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for stationarity using the KPSS test across segments — check_stationary","title":"Check for stationarity using the KPSS test across segments — check_stationary","text":"Check stationarity using KPSS test across segments","code":""},{"path":"/reference/check_stationary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for stationarity using the KPSS test across segments — check_stationary","text":"","code":"check_stationary(ts, t.seg = 0.5)"},{"path":"/reference/check_stationary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for stationarity using the KPSS test across segments — check_stationary","text":"ts `ts` object. t.seg Segment duration seconds.","code":""},{"path":"/reference/check_stationary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for stationarity using the KPSS test across segments — check_stationary","text":"matrix KPSS p-values level trend.","code":""},{"path":"/reference/coincide_P0.html","id":null,"dir":"Reference","previous_headings":"","what":"Coincidence Analysis Using P0 Statistics — coincide_P0","title":"Coincidence Analysis Using P0 Statistics — coincide_P0","text":"Perform coincidence analysis two detectors (e.g., H1 L1) computing bin-wise joint probability statistics based false alarm probabilities (P0). useful detecting temporally aligned anomalies across detectors.","code":""},{"path":"/reference/coincide_P0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coincidence Analysis Using P0 Statistics — coincide_P0","text":"","code":"coincide_P0(   shift.proc,   ref.proc,   n_shift = NULL,   window_size,   overlap = 0.5,   step_size = (1 - overlap) * window_size,   mean.func = har.mean,   p_col = \"P0_BURST_CAT2\",   return = 1L )"},{"path":"/reference/coincide_P0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coincidence Analysis Using P0 Statistics — coincide_P0","text":"shift.proc data.table detection statistics detector time-shifted (e.g., H1). Must contain time P0 column. ref.proc data.table detection statistics reference detector (e.g., L1). Must contain time P0 column. n_shift Optional integer. Number samples cyclically shift shift.proc time. window_size Integer. size coincidence window (number samples). overlap Numeric (default: 0.5). Overlap ratio consecutive windows. Must 0 1. step_size Integer. Step size windows. Defaults (1 - overlap) * window_size. mean.func function named list functions aggregate P0 values within window (e.g., har.mean, mean). p_col Character. Name P0 column shift.proc ref.proc. return Integer. Controls output format: 1: return aggregated coincidence result . 2: return list joined time-aligned samples final result.","code":""},{"path":"/reference/coincide_P0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coincidence Analysis Using P0 Statistics — coincide_P0","text":"Depending value return, either data.table coincidence results, list containing joined result tables.","code":""},{"path":"/reference/coincide_P0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coincidence Analysis Using P0 Statistics — coincide_P0","text":"function first aligns optionally shifts time series one detector, joins time column, bins data overlapping windows, applies aggregation function P0 values, computes joint P0 multiplying aggregated values.","code":""},{"path":"/reference/concat_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate with previous tail to form new ts — concat_ts","title":"Concatenate with previous tail to form new ts — concat_ts","text":"Concatenates tail previous time series (`prev`) current one (`curr`), keeping last `n_former` points `prev`. `prev` `NA`, returns `curr` unchanged.","code":""},{"path":"/reference/concat_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate with previous tail to form new ts — concat_ts","text":"","code":"concat_ts(prev = NA, curr, n_former)"},{"path":"/reference/concat_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate with previous tail to form new ts — concat_ts","text":"prev `ts` object `NA` (default). Previous time series. curr `ts` object. Current time series. n_former integer. Number tail points `prev` keep.","code":""},{"path":"/reference/concat_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate with previous tail to form new ts — concat_ts","text":"new concatenated `ts` object.","code":""},{"path":"/reference/concat_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate with previous tail to form new ts — concat_ts","text":"","code":"if (FALSE) { # \\dontrun{ prev <- ts(1:100, start = 0, frequency = 1) curr <- ts(101:105, start = 100, frequency = 1) concat_ts(prev, curr, n_former = 5) } # }"},{"path":"/reference/config_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default pipeline configuration — config_pipe","title":"Get default pipeline configuration — config_pipe","text":"Returns list default options full anomaly detection coincidence pipeline. Can used initialize parameter settings prior calling arch() pipe().","code":""},{"path":"/reference/config_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default pipeline configuration — config_pipe","text":"","code":"config_pipe(t_batch = 1L, replace = NULL)"},{"path":"/reference/config_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default pipeline configuration — config_pipe","text":"t_batch time length batch data (Default 1 second). replace Optional named list override default values.","code":""},{"path":"/reference/config_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default pipeline configuration — config_pipe","text":"named list containing following fields: d, p, q: Differencing ARMA model orders. fl, fu: Frequency bounds band-pass filtering. arch: Architecture function (default: arch). nmax, scale: Anomaly detection thresholds. method, decomp: Anomaly detection method decomposition. eps: DBSCAN epsilon clustering anomalies. DQ: Data quality flag (default: \"BURST_CAT2\"). window_size, overlap, mean.func: Coincidence analysis parameters. P_update: Update probability coincidence test. n_missed: Number samples missed due differencing/ARMA lag.","code":""},{"path":"/reference/config_pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get default pipeline configuration — config_pipe","text":"","code":"if (FALSE) { # \\dontrun{ # Get default configuration opt <- config_pipe()  # Override specific values opt2 <- config_pipe(list(p = 512, q = 10, fl = 16)) } # }"},{"path":"/reference/copy_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Attributes from Reference Object — copy_attr","title":"Copy Attributes from Reference Object — copy_attr","text":"Copy specified attributes reference object target object.","code":""},{"path":"/reference/copy_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Attributes from Reference Object — copy_attr","text":"","code":"copy_attr(target, ref, which = NULL)"},{"path":"/reference/copy_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Attributes from Reference Object — copy_attr","text":"target object attributes added. ref reference object attributes copied. character vector specifying names attributes copy. NULL, attributes overwritten.","code":""},{"path":"/reference/copy_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Attributes from Reference Object — copy_attr","text":"modified `target` object selected attributes copied `ref`.","code":""},{"path":"/reference/correlate.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlate two complex vectors — correlate","title":"Correlate two complex vectors — correlate","text":"Computes element-wise product conjugate `x` `y`, used matched filtering.","code":""},{"path":"/reference/correlate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlate two complex vectors — correlate","text":"","code":"correlate(x, y)"},{"path":"/reference/correlate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlate two complex vectors — correlate","text":"x complex vector. y complex vector.","code":""},{"path":"/reference/correlate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlate two complex vectors — correlate","text":"complex vector, result conjugate(x) * y.","code":""},{"path":"/reference/correlate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correlate two complex vectors — correlate","text":"https://pycbc.org/pycbc/latest/html/_modules/pycbc/filter/matchedfilter_numpy.html#correlate","code":""},{"path":"/reference/create_wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Working Directory (WD) Recursively with Optional Suffix — create_wd","title":"Create Working Directory (WD) Recursively with Optional Suffix — create_wd","text":"Create nested directory root/sub/subsub. directory already exists `alternative = TRUE`, new directory created appended numeric suffix.","code":""},{"path":"/reference/create_wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Working Directory (WD) Recursively with Optional Suffix — create_wd","text":"","code":"create_wd(root, sub, subsub, alternative = F, set = T)"},{"path":"/reference/create_wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Working Directory (WD) Recursively with Optional Suffix — create_wd","text":"root character. Root directory (absolute path). sub character. Sub-directory name (path). subsub character. Sub-sub-directory name. alternative logical (default: FALSE). TRUE, appends numeric suffix avoid overwrite. set logical (default: TRUE). TRUE, sets created directory working directory.","code":""},{"path":"/reference/create_wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Working Directory (WD) Recursively with Optional Suffix — create_wd","text":"character string final working directory path (`set = TRUE`).","code":""},{"path":"/reference/crop_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Handy window function with index — crop_to","title":"Handy window function with index — crop_to","text":"Handy window function index","code":""},{"path":"/reference/crop_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handy window function with index — crop_to","text":"","code":"crop_to(ts, ind.range)"},{"path":"/reference/crop_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handy window function with index — crop_to","text":"ts time series (`ts`) object. ind.range vector length 2. first second element refer initial final index, respectively.","code":""},{"path":"/reference/crop_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handy window function with index — crop_to","text":"cropped time series (`ts`) object.","code":""},{"path":"/reference/cutoff_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop frequency series to a given range — cutoff_to","title":"Crop frequency series to a given range — cutoff_to","text":"Crop frequency series given range","code":""},{"path":"/reference/cutoff_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop frequency series to a given range — cutoff_to","text":"","code":"cutoff_to(fs, ref, frange = NULL)"},{"path":"/reference/cutoff_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop frequency series to a given range — cutoff_to","text":"fs `fs` object (frequency series). ref vector elements: `c(min, max)`, indicating index range. frange vector frequency range. `frange[1]` can larger `ref[1]` `frange[2]` can smaller `ref[2]`, consider specific frequency range.","code":""},{"path":"/reference/cutoff_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop frequency series to a given range — cutoff_to","text":"cropped `fs` object preserved attributes.","code":""},{"path":"/reference/cyclic.html","id":null,"dir":"Reference","previous_headings":"","what":"Cyclically shift a vector — cyclic","title":"Cyclically shift a vector — cyclic","text":"Cyclically shift vector","code":""},{"path":"/reference/cyclic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cyclically shift a vector — cyclic","text":"","code":"cyclic(x, n)"},{"path":"/reference/cyclic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cyclically shift a vector — cyclic","text":"x numeric vector. n integer. Number elements shift.","code":""},{"path":"/reference/cyclic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cyclically shift a vector — cyclic","text":"cyclic-shifted vector.","code":""},{"path":"/reference/decomp_freq_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","title":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","text":"Computes data-driven window lengths (**seconds**) seasonal (`frequency`) trend (`trend`) components used anomalize::time_decompose (works method = \"stl\" method = \"twitter\"). primary estimator selects earliest statistically significant **local maximum** autocorrelation function (ACF). peak exists, fallback uses dominant peak periodogram (excluding near-DC). resulting base period scaled clamped avoid pathological window sizes.","code":""},{"path":"/reference/decomp_freq_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","text":"","code":"decomp_freq_trend(   ts,   fac.f = 1,   fac.t = 1.5,   max_period_frac = 0.2,   lag.max = NULL,   use_fft_fallback = TRUE )"},{"path":"/reference/decomp_freq_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","text":"ts numeric ts time series. ts, frequency(ts) used upstream computing ACF; consume ACF output assuming lags already seconds. fac.f Numeric scalar. Multiplier seasonal window (default 1.0). Twitter method, 1.0 aligns base period; increase widen seasonal window. fac.t Numeric scalar. Multiplier trend window (default 1.5). Typical Twitter heuristic ~1.5–2.0. max_period_frac Numeric (0,1). Upper bound candidate period fraction series duration (default 0.2). Prevents overly long periods relative batch length. lag.max Integer. Maximum lag forwarded ACF() (default: min(4096, length(ts)-1)). use_fft_fallback Logical. TRUE (default), use stats::spec.pgram fallback significant ACF peak found.","code":""},{"path":"/reference/decomp_freq_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","text":"list two numeric scalars (**seconds**): freq  — seasonal window length frequency= trend — trend window length trend= strings typically passed paste(value, \"seconds\") anomalize::time_decompose().","code":""},{"path":"/reference/decomp_freq_trend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","text":"- Assumes input ACF() returns lag **seconds** (  current implementation). effective sampling interval \\(\\Delta t\\)   inferred median(diff(lag)). - **Primary rule**: pick first lag \\(\\tau > 0\\)   \\(\\mathrm{ACF}(\\tau)\\) local maximum exceeds white-noise   95% CI. - **Fallback**: choose \\(\\tau = (1/f_\\mathrm{dom}) \\Delta t\\)   dominant periodogram frequency (excluding small region near DC). - Windows constructed   $$\\mathrm{frequency} = \\max(2\\Delta t, \\min(f_\\mathrm{fac}\\,\\tau, \\tau_\\max))$$   $$\\mathrm{trend}     = \\max(1.1\\,\\mathrm{frequency}, \\min(t_\\mathrm{fac}\\,\\tau, \\tau_\\max))$$   \\(\\tau_\\max = \\min(\\max(\\mathrm{lag}),\\, \\mathrm{max\\_period\\_frac}\\cdot N\\Delta t)\\).","code":""},{"path":[]},{"path":"/reference/decomp_freq_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate frequency/trend windows from ACF with spectral fallback — decomp_freq_trend","text":"","code":"if (FALSE) { # \\dontrun{ ft <- decomp_freq_trend(ts, fac.f = 1.0, fac.t = 1.5) anomalize::time_decompose(df, observed,     method = \"twitter\",     frequency = paste(ft$freq, \"seconds\"),     trend = paste(ft$trend, \"seconds\") ) } # }"},{"path":"/reference/deltaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Frequency Resolution from `fs` Object — deltaf","title":"Extract Frequency Resolution from `fs` Object — deltaf","text":"Returns `delta_f` attribute `fs` object.","code":""},{"path":"/reference/deltaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Frequency Resolution from `fs` Object — deltaf","text":"","code":"deltaf(x)"},{"path":"/reference/deltaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Frequency Resolution from `fs` Object — deltaf","text":"x `fs` object.","code":""},{"path":"/reference/deltaf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Frequency Resolution from `fs` Object — deltaf","text":"numeric scalar representing frequency resolution.","code":""},{"path":"/reference/deltam_f.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert mismatch to fractional spacing — deltam_f","title":"Convert mismatch to fractional spacing — deltam_f","text":"Compute fractional spacing (delta m) neighboring tiles mismatch.","code":""},{"path":"/reference/deltam_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert mismatch to fractional spacing — deltam_f","text":"","code":"deltam_f(mismatch)"},{"path":"/reference/deltam_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert mismatch to fractional spacing — deltam_f","text":"mismatch numeric. Desired fractional mismatch (e.g., 0.2).","code":""},{"path":"/reference/deltam_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert mismatch to fractional spacing — deltam_f","text":"numeric. Fractional spacing.","code":""},{"path":"/reference/dot-iter_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate over tile center frequencies for a given Q — .iter_freqs","title":"Iterate over tile center frequencies for a given Q — .iter_freqs","text":"Determine central frequencies place tiles, fixed Q.","code":""},{"path":"/reference/dot-iter_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate over tile center frequencies for a given Q — .iter_freqs","text":"","code":".iter_freqs(q, frange, mismatch, duration)"},{"path":"/reference/dot-iter_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate over tile center frequencies for a given Q — .iter_freqs","text":"q numeric. Q value. frange numeric vector length 2. Frequency range (Hz). mismatch numeric. Desired mismatch (e.g., 0.2). duration numeric. Duration input time series seconds.","code":""},{"path":"/reference/dot-iter_freqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterate over tile center frequencies for a given Q — .iter_freqs","text":"numeric vector center frequencies (Hz).","code":""},{"path":"/reference/dot-iter_qs.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate over the Q values — .iter_qs","title":"Iterate over the Q values — .iter_qs","text":"Compute Q values use Q-tiling, given range mismatch tolerance.","code":""},{"path":"/reference/dot-iter_qs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate over the Q values — .iter_qs","text":"","code":".iter_qs(qrange, deltam)"},{"path":"/reference/dot-iter_qs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate over the Q values — .iter_qs","text":"qrange numeric vector length 2. Lower upper bounds Q range. deltam numeric. Fractional mismatch neighboring Q tiles.","code":""},{"path":"/reference/dot-iter_qs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterate over the Q values — .iter_qs","text":"numeric vector Q values Q-planes.","code":""},{"path":"/reference/download_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Download dataset/strain-file for a GWOSC event (v2, sampling.freq-aware) — download_event","title":"Download dataset/strain-file for a GWOSC event (v2, sampling.freq-aware) — download_event","text":"given GW event name (e.g. \"GW150914\") detector (e.g. \"H1\"), function tries several GWOSC v2 endpoints sensible order find matching strain-file URL download . Among multiple candidates, prioritizes one whose sample rate closest sampling.freq.","code":""},{"path":"/reference/download_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download dataset/strain-file for a GWOSC event (v2, sampling.freq-aware) — download_event","text":"","code":"download_event(   event_name,   det,   path = \".\",   file.format = \"hdf5\",   sampling.freq = 4096,   timeout = 300,   load = FALSE,   remove = FALSE,   verbose = TRUE )"},{"path":"/reference/download_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download dataset/strain-file for a GWOSC event (v2, sampling.freq-aware) — download_event","text":"event_name Character. GWOSC event name, e.g. \"GW150914\". det Character. Detector name, e.g. \"H1\". path Character. Directory save file (created missing). file.format Character. \"hdf5\" (default), \"gwf\", \"txt\". sampling.freq Numeric scalar (Hz). Desired sampling frequency used prioritize candidates. Default 4096. timeout Integer. Download timeout seconds (default 300). load Logical. TRUE HDF5, load via read_H5() return ts. remove Logical. load=TRUE remove=TRUE, delete file loading. verbose Logical. Print progress messages.","code":""},{"path":"/reference/download_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download dataset/strain-file for a GWOSC event (v2, sampling.freq-aware) — download_event","text":"load=FALSE, normalized path downloaded file (character).         load=TRUE HDF5, ts object read_H5().","code":""},{"path":"/reference/download_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download dataset/strain-file for a GWOSC event (v2, sampling.freq-aware) — download_event","text":"function attempts (order):  1. /api/v2/events/<EVENT>/strain-files  2. /api/v2/events/<EVENT> -> latest version -> /event-versions/<EVENT>-vN/strain-files  3. /api/v2/event-versions/<EVENT>/dataset -> use dataset$strain_files_url load=TRUE file HDF5, function returns ts object delegating read_H5(file, sampling.freq, dq.level).","code":""},{"path":"/reference/download_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Download files listed in a GWOSC segment-data frame — download_segment","title":"Download files listed in a GWOSC segment-data frame — download_segment","text":"Download files described url column file.df save local directory. helper intentionally simple: takes url values returned get_segment() preserves original file basenames saving.","code":""},{"path":"/reference/download_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download files listed in a GWOSC segment-data frame — download_segment","text":"","code":"download_segment(   file.df,   path,   background = FALSE,   background.wait = 30,   timeout = 300 )"},{"path":"/reference/download_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download files listed in a GWOSC segment-data frame — download_segment","text":"file.df data.frame returned get_segment() contains url column. function attempt download url path. path Character. Directory save downloaded files. directory created recursively exist. background Logical (default FALSE). TRUE job package available, downloads launched background job. job installed function falls back foreground downloads warning. background.wait Integer (default 30). using background = TRUE, function polls presence first file every background.wait seconds returns first file exists. timeout Integer (default 300). Download timeout seconds; function temporarily sets options(timeout = ...) downloading.","code":""},{"path":"/reference/download_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download files listed in a GWOSC segment-data frame — download_segment","text":"character vector full paths files (  ) written. background mode used files may still downloading   function returns.","code":""},{"path":[]},{"path":"/reference/download_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download files listed in a GWOSC segment-data frame — download_segment","text":"","code":"if (FALSE) { # \\dontrun{ files <- get_segment(\"O1\", \"H1\", 1126051217, 1126051217 + 4096) outpaths <- download_segment(files, path = \"data/O1_H1/\") print(outpaths) } # }"},{"path":"/reference/dur.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Duration of the Original Time Series — dur","title":"Get Duration of the Original Time Series — dur","text":"Computes total duration seconds time-domain signal generated `fs` object.","code":""},{"path":"/reference/dur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Duration of the Original Time Series — dur","text":"","code":"dur(fs)"},{"path":"/reference/dur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Duration of the Original Time Series — dur","text":"fs `fs` object derived `ts` object.","code":""},{"path":"/reference/dur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Duration of the Original Time Series — dur","text":"numeric scalar. Duration seconds.","code":""},{"path":"/reference/ear.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble AR model fitting across multiple orders — ear","title":"Ensemble AR model fitting across multiple orders — ear","text":"Ensemble AR model fitting across multiple orders","code":""},{"path":"/reference/ear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble AR model fitting across multiple orders — ear","text":"","code":"ear(   ts,   ps,   aic = T,   return.vec = T,   return.var = T,   return.mean = T,   collector = \"median\",   ... )"},{"path":"/reference/ear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble AR model fitting across multiple orders — ear","text":"ts `ts` object. ps Vector AR orders. aic Use AIC selection. return.vec Flatten features. return.var Include prediction variance. return.mean Include series mean. collector Aggregation method. ... Additional args passed `burgar()`.","code":""},{"path":"/reference/ear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble AR model fitting across multiple orders — ear","text":"Residual `ts` object ensemble features.","code":""},{"path":"/reference/embedParallelCpp.html","id":null,"dir":"Reference","previous_headings":"","what":"C++ version of embed function — embedParallelCpp","title":"C++ version of embed function — embedParallelCpp","text":"C++ version embed function","code":""},{"path":"/reference/embedParallelCpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"C++ version of embed function — embedParallelCpp","text":"","code":"embedParallelCpp(x, dimension, numCores)"},{"path":"/reference/embedParallelCpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"C++ version of embed function — embedParallelCpp","text":"x numeric vector. dimension numeric. numCores numeric. number cores","code":""},{"path":"/reference/eoa.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Ensemble of Averages (EoA) — eoa","title":"Apply Ensemble of Averages (EoA) — eoa","text":"Apply Ensemble Averages (EoA)","code":""},{"path":"/reference/eoa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Ensemble of Averages (EoA) — eoa","text":"","code":"eoa(ts, qs, collector = \"median\", w.func = NULL, ...)"},{"path":"/reference/eoa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Ensemble of Averages (EoA) — eoa","text":"ts `ts` object. qs MA orders. collector Aggregation method. w.func Optional function generate weight vector given `order`. return numeric vector length `order`. ... Additional arguments passed `w.func`, specified.","code":""},{"path":"/reference/eoa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Ensemble of Averages (EoA) — eoa","text":"Smoothed `ts` object MA ensemble metadata.","code":""},{"path":"/reference/evenify.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure even-length `ts` — evenify","title":"Ensure even-length `ts` — evenify","text":"Ensure even-length `ts`","code":""},{"path":"/reference/evenify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure even-length `ts` — evenify","text":"","code":"evenify(ts)"},{"path":"/reference/evenify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure even-length `ts` — evenify","text":"ts `ts` object.","code":""},{"path":"/reference/evenify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure even-length `ts` — evenify","text":"`ts` object even length (truncates last sample needed).","code":""},{"path":"/reference/extract_pc.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract principal component(s) from input — extract_pc","title":"Extract principal component(s) from input — extract_pc","text":"Extract principal component(s) input","code":""},{"path":"/reference/extract_pc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract principal component(s) from input — extract_pc","text":"","code":"extract_pc(x, pc = \"PC1\")"},{"path":"/reference/extract_pc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract principal component(s) from input — extract_pc","text":"x data frame matrix. pc string vector PC names (e.g., \"PC1\").","code":""},{"path":"/reference/extract_pc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract principal component(s) from input — extract_pc","text":"matrix vector selected components.","code":""},{"path":"/reference/filter_files_by_dutycycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter files by timeline segment duty cycle — filter_files_by_dutycycle","title":"Filter files by timeline segment duty cycle — filter_files_by_dutycycle","text":"internal utility checks whether data files (GPS start times durations) covered timeline segments sufficient duty cycle. can operate without explicit `detector` column segment table.","code":""},{"path":"/reference/filter_files_by_dutycycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter files by timeline segment duty cycle — filter_files_by_dutycycle","text":"","code":"filter_files_by_dutycycle(   files_df,   segs_df,   duty.cycle.lwr = 95,   require_full_coverage = TRUE )"},{"path":"/reference/filter_files_by_dutycycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter files by timeline segment duty cycle — filter_files_by_dutycycle","text":"files_df `data.frame` least columns: GPSstart (numeric/integer): GPS start time file duration (numeric/integer): file length seconds detector (character): detector identifier url (character): file URL Typically produced get_segment(). segs_df `data.frame` least columns: start, stop: GPS start stop times segment duty_cycle (numeric, optional): duty cycle percent; missing, added NA. detector (character, optional): absent, files matched segments. Typically produced get_timeline_segments(). duty.cycle.lwr Numeric scalar. Lower threshold duty cycle (units segs_df$duty_cycle, e.g. 95 95%). Defaults 95. require_full_coverage Logical. TRUE, file interval [GPSstart, GPSstart + duration) must entirely contained within segment. FALSE, partial overlap sufficient.","code":""},{"path":"/reference/filter_files_by_dutycycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter files by timeline segment duty cycle — filter_files_by_dutycycle","text":"subset files_df retaining rows pass   duty cycle coverage check. file passes, empty   data.frame columns returned.","code":""},{"path":"/reference/filter_files_by_dutycycle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter files by timeline segment duty cycle — filter_files_by_dutycycle","text":"file interval, function finds covering segments segs_df (according require_full_coverage). multiple segments overlap, maximum duty cycle among compared duty.cycle.lwr. Files covered segments NA duty cycle rejected.","code":""},{"path":[]},{"path":"/reference/floor_digit.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor with Decimal Digits — floor_digit","title":"Floor with Decimal Digits — floor_digit","text":"Applies floor() function number precision controlled number digits.","code":""},{"path":"/reference/floor_digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor with Decimal Digits — floor_digit","text":"","code":"floor_digit(x, digits = 0)"},{"path":"/reference/floor_digit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor with Decimal Digits — floor_digit","text":"x numeric value vector. digits Integer (default: 0). Number decimal digits retain.","code":""},{"path":"/reference/floor_digit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor with Decimal Digits — floor_digit","text":"numeric vector values floored specified digits.","code":""},{"path":"/reference/freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Frequency Samples from `fs` — freqs","title":"Get Frequency Samples from `fs` — freqs","text":"Computes discrete frequency values corresponding bins `fs` object.","code":""},{"path":"/reference/freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Frequency Samples from `fs` — freqs","text":"","code":"freqs(fs)"},{"path":"/reference/freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Frequency Samples from `fs` — freqs","text":"fs `fs` object.","code":""},{"path":"/reference/freqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Frequency Samples from `fs` — freqs","text":"numeric vector frequency values (Hz).","code":""},{"path":"/reference/fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Frequency Series Object (`fs`) — fs","title":"Create a Frequency Series Object (`fs`) — fs","text":"Wraps numeric vector `fs` class, assigning appropriate attributes frequency-domain analysis.","code":""},{"path":"/reference/fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Frequency Series Object (`fs`) — fs","text":"","code":"fs(x, df, sampling.freq)"},{"path":"/reference/fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Frequency Series Object (`fs`) — fs","text":"x numeric vector representing frequency-domain data. df numeric scalar. Frequency resolution (`delta_f`). sampling.freq numeric. Sampling frequency.","code":""},{"path":"/reference/fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Frequency Series Object (`fs`) — fs","text":"object class `fs`, additional attributes `delta_f` `flen`.","code":""},{"path":"/reference/fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Frequency Series Object (`fs`) — fs","text":"","code":"if (FALSE) { # \\dontrun{ fs(c(1, 2, 3), df = 0.5) } # }"},{"path":"/reference/fs_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert `fs` to Data Frame — fs_df","title":"Convert `fs` to Data Frame — fs_df","text":"Converts `fs` object data frame columns `freqs` `PSD`.","code":""},{"path":"/reference/fs_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert `fs` to Data Frame — fs_df","text":"","code":"fs_df(fs)"},{"path":"/reference/fs_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert `fs` to Data Frame — fs_df","text":"fs `fs` object.","code":""},{"path":"/reference/fs_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert `fs` to Data Frame — fs_df","text":"data frame two columns: `freqs` `PSD`.","code":""},{"path":"/reference/geo_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric Mean Ignoring NA — geo_mean","title":"Geometric Mean Ignoring NA — geo_mean","text":"Compute geometric mean numeric vector, optionally removing NA values.","code":""},{"path":"/reference/geo_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric Mean Ignoring NA — geo_mean","text":"","code":"geo_mean(x, na.rm = T)"},{"path":"/reference/geo_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric Mean Ignoring NA — geo_mean","text":"x numeric vector. na.rm Logical (default TRUE). Whether remove NA values.","code":""},{"path":"/reference/geo_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric Mean Ignoring NA — geo_mean","text":"numeric scalar representing geometric mean.","code":""},{"path":"/reference/geo_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geometric Mean Ignoring NA — geo_mean","text":"Defined exp(mean(log(x))), assuming x > 0. Useful combining multiplicative factors log-normal distributions.","code":""},{"path":"/reference/gesd2.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect outliers using robust GESD method — gesd2","title":"Detect outliers using robust GESD method — gesd2","text":"Applies Generalized Extreme Studentized Deviate (GESD) test detecting one outliers univariate numeric vector, using robust formulation median MAD.","code":""},{"path":"/reference/gesd2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect outliers using robust GESD method — gesd2","text":"","code":"gesd2(x, alpha = 0.05, max_anoms = 0.2, verbose = FALSE)"},{"path":"/reference/gesd2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect outliers using robust GESD method — gesd2","text":"x numeric vector. alpha numeric (default: 0.05). Significance level detecting outliers. max_anoms numeric 0 1 (default: 0.2). Maximum fraction values may flagged outliers. verbose Logical (default: FALSE). TRUE, returns detailed outlier report.","code":""},{"path":"/reference/gesd2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect outliers using robust GESD method — gesd2","text":"verbose = FALSE, returns integer vector (length x) 0 normal values 1 outliers. verbose = TRUE, returns list : outlier Binary vector 0/1 flags. outlier_idx Indices detected outliers. outlier_vals Values detected outliers. outlier_direction Direction anomaly (\"\" \"\"). critical_limits Named vector lower upper bounds. outlier_report tibble summarizing detection statistics.","code":""},{"path":"/reference/gesd2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect outliers using robust GESD method — gesd2","text":"function implements robust version GESD procedure, replacing mean standard deviation median MAD (median absolute deviation), commonly used anomaly detection heavy-tailed skewed data. iteration, removes extreme observation (highest robust z-score), recalculates test statistic, compares dynamically computed critical value. Observations reported outliers z-statistics exceed threshold. implementation adapted anomalize's gesd() method. return type simplified use binary flags (1 = outlier, 0 = normal), function implemented without using pipe operators clarity compatibility.","code":""},{"path":"/reference/gesd2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect outliers using robust GESD method — gesd2","text":"Adapted anomalize::gesd(): https://business-science.github.io/anomalize/reference/gesd.html Original method: Rosner, B. (1983). “Percentage points generalized ESD many-outlier procedure.” Technometrics.","code":""},{"path":"/reference/get_MissingValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential ARIMA pipeline components — get_MissingValues","title":"Sequential ARIMA pipeline components — get_MissingValues","text":"file contains key components used seqarima pipeline, including differencing, autoregressive (AR) fitting, moving average (MA) smoothing functions.","code":""},{"path":"/reference/get_MissingValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential ARIMA pipeline components — get_MissingValues","text":"","code":"get_MissingValues(ts, ref)"},{"path":"/reference/get_MissingValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential ARIMA pipeline components — get_MissingValues","text":"ts time series (`ts`) object may NA values. ref reference `ts` object used comparison.","code":""},{"path":"/reference/get_MissingValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential ARIMA pipeline components — get_MissingValues","text":"list : time stamps NA `ts` compared `ref` head NA timestamps start series tail NA timestamps end series","code":""},{"path":"/reference/get_MissingValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential ARIMA pipeline components — get_MissingValues","text":"Identify missing values time series relative reference","code":""},{"path":"/reference/get_antpatt.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute antenna pattern for a detector — get_antpatt","title":"Compute antenna pattern for a detector — get_antpatt","text":"Compute antenna pattern detector","code":""},{"path":"/reference/get_antpatt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute antenna pattern for a detector — get_antpatt","text":"","code":"get_antpatt(det, ra, dec, pol, t_gps, online = F)"},{"path":"/reference/get_antpatt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute antenna pattern for a detector — get_antpatt","text":"det character. Detector abbreviation (e.g., \"H1\"). ra numeric. Right Ascension (radians). dec numeric. Declination (radians). pol numeric. Polarization angle (radians). t_gps numeric. GPS time signal arrival Earth's center. online Logical. Whether use online IERS data (default: FALSE).","code":""},{"path":"/reference/get_antpatt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute antenna pattern for a detector — get_antpatt","text":"named list fp fc antenna pattern coefficients.","code":""},{"path":"/reference/get_antpatt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute antenna pattern for a detector — get_antpatt","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/get_available_detectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available GW detectors — get_available_detectors","title":"Get available GW detectors — get_available_detectors","text":"Queries list available detectors PyCBC returns location info.","code":""},{"path":"/reference/get_available_detectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available GW detectors — get_available_detectors","text":"","code":"get_available_detectors()"},{"path":"/reference/get_available_detectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available GW detectors — get_available_detectors","text":"data frame columns: Detector Name, Abbreviation, latitude, longitude.","code":""},{"path":"/reference/get_available_detectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get available GW detectors — get_available_detectors","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/get_break_rngdgt.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute break points with rounded range — get_break_rngdgt","title":"Compute break points with rounded range — get_break_rngdgt","text":"Compute break points rounded range","code":""},{"path":"/reference/get_break_rngdgt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute break points with rounded range — get_break_rngdgt","text":"","code":"get_break_rngdgt(x, bin = 0.2)"},{"path":"/reference/get_break_rngdgt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute break points with rounded range — get_break_rngdgt","text":"x numeric vector values compute breaks . bin numeric scalar indicating bin width (default: 0.2).","code":""},{"path":"/reference/get_break_rngdgt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute break points with rounded range — get_break_rngdgt","text":"numeric vector break points minimum maximum x, rounded fit bin width.","code":""},{"path":"/reference/get_cutoff_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get frequency cutoff indices for overlap calculation — get_cutoff_indices","title":"Get frequency cutoff indices for overlap calculation — get_cutoff_indices","text":"Get frequency cutoff indices overlap calculation","code":""},{"path":"/reference/get_cutoff_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get frequency cutoff indices for overlap calculation — get_cutoff_indices","text":"","code":"get_cutoff_indices(flow, fupp, df, N)"},{"path":"/reference/get_cutoff_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get frequency cutoff indices for overlap calculation — get_cutoff_indices","text":"flow Numeric. lower frequency Hz. fupp Numeric. upper frequency Hz. df Numeric. Frequency resolution (Hz). N Integer. Number time-domain samples.","code":""},{"path":"/reference/get_cutoff_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get frequency cutoff indices for overlap calculation — get_cutoff_indices","text":"list elements `min` `max`, indicating cutoff indices.","code":""},{"path":"/reference/get_cutoff_indices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get frequency cutoff indices for overlap calculation — get_cutoff_indices","text":"https://pycbc.org/pycbc/latest/html/_modules/pycbc/filter/matchedfilter.html#get_cutoff_indices","code":""},{"path":"/reference/get_dqmask.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct dqmask as a ts or mts object — get_dqmask","title":"Reconstruct dqmask as a ts or mts object — get_dqmask","text":"Converts `dqmask` metadata attribute stored object (typically removed `ts` class storage) back formal time‑series (`ts` `mts`) object. Uses stored `tsp` attribute (fallback parent object’s `tsp`) reconstruct appropriate start, end, frequency information.","code":""},{"path":"/reference/get_dqmask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct dqmask as a ts or mts object — get_dqmask","text":"","code":"get_dqmask(obj)"},{"path":"/reference/get_dqmask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct dqmask as a ts or mts object — get_dqmask","text":"obj R object (e.g. returned read_H5()) containing attribute named \"dqmask\", either numeric vector numeric matrix/array (multi‑series).","code":""},{"path":"/reference/get_dqmask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct dqmask as a ts or mts object — get_dqmask","text":"ts object univariate data mts object   multivariate data, reconstructed using tsp   original \"level\" attribute re‑attached. Returns NULL   dqmask missing NULL.","code":""},{"path":"/reference/get_dqmask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reconstruct dqmask as a ts or mts object — get_dqmask","text":"helper retrieves dqmask obj, determines appropriate time-series parameters via tsp(obj) tsp(dqmask), recreates time-series using ts(). original \"level\" attribute (e.g. \"\" vs specific level) preserved.","code":""},{"path":"/reference/get_dqmask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct dqmask as a ts or mts object — get_dqmask","text":"","code":"if (FALSE) { # \\dontrun{ # Example for univariate case: res <- read_H5(\"example.h5\", sampling.freq = 1000, dq.level = \"CAT1\") dq_ts <- get_dqmask(res) print(dq_ts)  # Example for multivariate case: res2 <- read_H5(\"example_multi.h5\", sampling.freq = 1000, dq.level = \"all\") dq_ts2 <- get_dqmask(res2) str(dq_ts2) } # }"},{"path":"/reference/get_filemeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","title":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","text":"Query GWOSC API v2 /strain-files endpoint return tidy data.frame available files matching requested time window, detectors, sampling frequency, duration format.","code":""},{"path":"/reference/get_filemeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","text":"","code":"get_filemeta(   obsrun,   detector,   GPSstart,   GPSend,   sampling.freq = 4096,   dur = 4096,   file.format = \"hdf5\" )"},{"path":"/reference/get_filemeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","text":"obsrun Character. Observation run name (e.g. \"O1\"). detector Character vector. One detectors (e.g. c(\"H1\",\"L1\")). GPSstart Integer. Start GPS time. GPSend Integer. End GPS time. omitted, defaults GPSstart + dur. sampling.freq Integer (default 4096). Sampling frequency Hz (4096/16384 supported API expects sample-rate kHz). dur Integer (default 4096). Requested segment duration (seconds). file.format Character (default \"hdf5\"). Desired file format.","code":""},{"path":"/reference/get_filemeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","text":"data.frame columns: GPSstart, utc_start, detector, sample_rate_kHz,   url, detail_url (present), duration.","code":""},{"path":"/reference/get_filemeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","text":"Note: function returns file metadata (including download URL). perform duty-cycle timeline-based filtering.","code":""},{"path":"/reference/get_filemeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve file metadata (strain-files) from GWOSC API v2 — get_filemeta","text":"","code":"if (FALSE) { # \\dontrun{ fm <- get_filemeta(\"O1\", c(\"H1\", \"L1\"), 1126051217, 1126051217 + 86400) } # }"},{"path":"/reference/get_gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GPS time column to a data frame — get_gps","title":"Add GPS time column to a data frame — get_gps","text":"Adds GPS column data frame extracting timestamps reference ts object.","code":""},{"path":"/reference/get_gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GPS time column to a data frame — get_gps","text":"","code":"get_gps(df, ref.ts)"},{"path":"/reference/get_gps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GPS time column to a data frame — get_gps","text":"df data.frame tibble. data GPS time added. ref.ts ts object. Reference time series GPS timestamps extracted.","code":""},{"path":"/reference/get_gps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add GPS time column to a data frame — get_gps","text":"tibble identical df additional GPS column inserted time column.","code":""},{"path":"/reference/get_gwosc_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GWOSC parameters for one or more GW events — get_gwosc_param","title":"Get GWOSC parameters for one or more GW events — get_gwosc_param","text":"function queries GWOSC API v2 fetch, requested event, latest-event-version GPS time preferred (default) physical parameters. returns either allowed parameters user-specified subset parameter columns.","code":""},{"path":"/reference/get_gwosc_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GWOSC parameters for one or more GW events — get_gwosc_param","text":"","code":"get_gwosc_param(name, param = \"all\")"},{"path":"/reference/get_gwosc_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GWOSC parameters for one or more GW events — get_gwosc_param","text":"name Character vector. One event names (e.g., c(\"GW150914\",\"GW151012\")). param Character. Either \"\" (default) parameters, character vector column names list_gwosc_param() select. output preserves order param.","code":""},{"path":"/reference/get_gwosc_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GWOSC parameters for one or more GW events — get_gwosc_param","text":"data.frame whose rows correspond requested events   (order name) whose columns either allowed   parameters requested subset. Row names set event names.","code":""},{"path":"/reference/get_gwosc_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get GWOSC parameters for one or more GW events — get_gwosc_param","text":"function automatically: Selects latest event version per event name. Extracts GPS time event-version details , missing,         preferred pipeline parameters (e.g., geocent_time). Uses preferred (default) parameter values provided GWOSC. Returns absolute values lower/upper errors.","code":""},{"path":[]},{"path":"/reference/get_gwosc_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GWOSC parameters for one or more GW events — get_gwosc_param","text":"","code":"if (FALSE) { # \\dontrun{ # All parameters for multiple events get_gwosc_param(c(\"GW150914\", \"GW151012\"), \"all\")  # A subset of parameters (order preserved) get_gwosc_param(\"GW150914\", c(\"luminosity_distance\", \"GPS\"))  # Single parameter for multiple events get_gwosc_param(c(\"GW150914\", \"GW151012\"), \"chirp_mass_source\") } # }"},{"path":"/reference/get_last_tcen.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the most recent cluster center time — get_last_tcen","title":"Extract the most recent cluster center time — get_last_tcen","text":"Retrieves central time (`t_cen`) last (.e., recent) cluster processed anomaly dataframe. cluster exists, attempts retrieve `prev_tcen` parent environment.","code":""},{"path":"/reference/get_last_tcen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the most recent cluster center time — get_last_tcen","text":"","code":"get_last_tcen(proc)"},{"path":"/reference/get_last_tcen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the most recent cluster center time — get_last_tcen","text":"proc dataframe output anomaly detection pipeline, containing least columns `cluster` `t_cen`.","code":""},{"path":"/reference/get_last_tcen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the most recent cluster center time — get_last_tcen","text":"numeric value representing last cluster's center time (`t_cen`).","code":""},{"path":"/reference/get_last_tcen.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract the most recent cluster center time — get_last_tcen","text":"Assumes `prev_tcen` defined parent frame clusters found.","code":""},{"path":"/reference/get_light_travel_time_among_detectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute maximum light travel time between detectors — get_light_travel_time_among_detectors","title":"Compute maximum light travel time between detectors — get_light_travel_time_among_detectors","text":"Given set detector names, compute light travel time unique pairs using PyCBC's Detector geometry.","code":""},{"path":"/reference/get_light_travel_time_among_detectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute maximum light travel time between detectors — get_light_travel_time_among_detectors","text":"","code":"get_light_travel_time_among_detectors(dets)"},{"path":"/reference/get_light_travel_time_among_detectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute maximum light travel time between detectors — get_light_travel_time_among_detectors","text":"dets character vector detector names (e.g., c(\"H1\", \"L1\", \"V1\")).","code":""},{"path":"/reference/get_light_travel_time_among_detectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute maximum light travel time between detectors — get_light_travel_time_among_detectors","text":"named numeric vector light travel times (seconds) detector pair.         names formatted \"H1-L1\", \"H1-V1\", etc.","code":""},{"path":"/reference/get_light_travel_time_among_detectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute maximum light travel time between detectors — get_light_travel_time_among_detectors","text":"","code":"if (FALSE) { # \\dontrun{ get_light_travel_time_among_detectors(c(\"H1\", \"L1\", \"V1\")) } # }"},{"path":"/reference/get_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get limit range from ts by scaled maximum value — get_limit","title":"Get limit range from ts by scaled maximum value — get_limit","text":"Get limit range ts scaled maximum value","code":""},{"path":"/reference/get_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get limit range from ts by scaled maximum value — get_limit","text":"","code":"get_limit(x, mar.frac = 1.5)"},{"path":"/reference/get_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get limit range from ts by scaled maximum value — get_limit","text":"x numeric vector. mar.frac numeric. Scaling factor margin. Default 1.5.","code":""},{"path":"/reference/get_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get limit range from ts by scaled maximum value — get_limit","text":"vector. c(-amax, +amax) * mar.frac.","code":""},{"path":"/reference/get_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the order of magnitude — get_order","title":"Calculate the order of magnitude — get_order","text":"Calculate order magnitude","code":""},{"path":"/reference/get_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the order of magnitude — get_order","text":"","code":"get_order(x)"},{"path":"/reference/get_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the order of magnitude — get_order","text":"x numeric vector.","code":""},{"path":"/reference/get_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the order of magnitude — get_order","text":"numeric. order magnitude maximum absolute value.","code":""},{"path":"/reference/get_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Get files (strain-file metadata) optionally filtered by timeline duty-cycle — get_segment","title":"Get files (strain-file metadata) optionally filtered by timeline duty-cycle — get_segment","text":"High-level helper retrieves file metadata (get_filemeta()) , duty.cycle.lwr provided (non-NULL), applies timeline-based duty-cycle filtering using get_timeline() filter_files_by_dutycycle().","code":""},{"path":"/reference/get_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get files (strain-file metadata) optionally filtered by timeline duty-cycle — get_segment","text":"","code":"get_segment(   obsrun,   detector,   GPSstart,   GPSend = NULL,   sampling.freq = 4096,   dur = 4096,   file.format = \"hdf5\",   duty.cycle.lwr = NULL,   require_full_coverage = TRUE,   timeline_name = NULL,   timeline_verbose = FALSE )"},{"path":"/reference/get_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get files (strain-file metadata) optionally filtered by timeline duty-cycle — get_segment","text":"obsrun Character run id (e.g. \"O1\"). detector Character vector detectors. GPSstart Integer start GPS. GPSend Integer stop GPS. omitted, defaults GPSstart + dur. sampling.freq Integer (default 4096). dur Integer (default 4096). file.format Character (default \"hdf5\"). duty.cycle.lwr Numeric NULL. NULL (default) duty filtering applied. require_full_coverage Logical passed filter_files_by_dutycycle. timeline_name Optional timeline name (single string) NULL; NULL sensible default paste0(det, \"_DATA\") used per detector. timeline_verbose Logical timeline debug.","code":""},{"path":"/reference/get_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get files (strain-file metadata) optionally filtered by timeline duty-cycle — get_segment","text":"data.frame file metadata (filtered duty.cycle.lwr provided).","code":""},{"path":"/reference/get_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get files (strain-file metadata) optionally filtered by timeline duty-cycle — get_segment","text":"","code":"if (FALSE) { # \\dontrun{ # No duty filtering: files <- get_segment(\"O1\", c(\"H1\", \"L1\"), 1126051217, 1126051217 + 86400)  # With duty filtering (95%): timeline default is \"<DET>_DATA\" good <- get_segment(\"O1\", c(\"H1\", \"L1\"), 1126051217, 1126051217 + 86400,     duty.cycle.lwr = 95 ) } # }"},{"path":"/reference/get_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve timeline segments for a run/timeline (may include duty_cycle) — get_timeline","title":"Retrieve timeline segments for a run/timeline (may include duty_cycle) — get_timeline","text":"Query GWOSC timeline segments: /api/v2/runs/<obsrun>/timelines/<timeline>/segments","code":""},{"path":"/reference/get_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve timeline segments for a run/timeline (may include duty_cycle) — get_timeline","text":"","code":"get_timeline(   obsrun,   timeline,   GPSstart,   GPSend,   compact = FALSE,   verbose = FALSE )"},{"path":"/reference/get_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve timeline segments for a run/timeline (may include duty_cycle) — get_timeline","text":"obsrun Character run id (e.g. \"O1\"). timeline Character timeline id (e.g. \"H1_DATA\" \"H1_BURST_CAT2\"). GPSstart Integer start GPS. GPSend Integer stop GPS. compact Logical TRUE request compact form supported. verbose Logical debugging.","code":""},{"path":"/reference/get_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve timeline segments for a run/timeline (may include duty_cycle) — get_timeline","text":"data.frame columns start, stop, duty_cycle (present).","code":""},{"path":"/reference/get_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve timeline segments for a run/timeline (may include duty_cycle) — get_timeline","text":"","code":"if (FALSE) { # \\dontrun{ segs <- get_timeline(\"O1\", \"H1_DATA\", 1126051217, 1126051217 + 86400) } # }"},{"path":"/reference/get_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate gravitational-wave signal from PyCBC — get_wave","title":"Generate gravitational-wave signal from PyCBC — get_wave","text":"Calls PyCBC waveform generator optionally applies antenna projection Earth rotation.","code":""},{"path":"/reference/get_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate gravitational-wave signal from PyCBC — get_wave","text":"","code":"get_wave(   model.name,   sampling.freq,   fl = NULL,   fu = NULL,   m1 = NULL,   m2 = NULL,   d_L = NULL,   inc = 0,   ...,   R.ts = TRUE,   det,   ra,   dec,   pol,   t_gps,   proj = FALSE )"},{"path":"/reference/get_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate gravitational-wave signal from PyCBC — get_wave","text":"model.name character. Waveform approximant name (e.g., \"IMRPhenomPv2\"). sampling.freq numeric. Sampling rate Hz. fl numeric. Lower frequency bound (Hz). fu numeric. Upper frequency bound (Hz). m1 numeric. Mass 1 (solar masses). m2 numeric. Mass 2 (solar masses). d_L numeric. Luminosity distance (Mpc). inc numeric. Inclination angle (radians). Default: 0. ... Additional waveform parameters. R.ts Logical. TRUE, return result R ts objects. det character. Detector abbreviation. ra numeric. Right Ascension (radians). dec numeric. Declination (radians). pol numeric. Polarization angle (radians). t_gps numeric. GPS time signal arrival. proj Logical. TRUE, apply full Earth-rotation-based projection.","code":""},{"path":"/reference/get_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate gravitational-wave signal from PyCBC — get_wave","text":"list waveform components (hp, hc, ht) attributes: Params – generation parameters AntPat – antenna pattern info","code":""},{"path":"/reference/get_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate gravitational-wave signal from PyCBC — get_wave","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/gps2utc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GPS time to UTC — gps2utc","title":"Convert GPS time to UTC — gps2utc","text":"Convert GPS time UTC","code":""},{"path":"/reference/gps2utc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GPS time to UTC — gps2utc","text":"","code":"gps2utc(x, origin = as.POSIXct(\"1980-01-06 00:00:00\", tz = \"UTC\"))"},{"path":"/reference/gps2utc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GPS time to UTC — gps2utc","text":"x numeric. GPS time. origin POSIXct (default: .POSIXct(\"1980-01-06 00:00:00\", tz = \"UTC\"))","code":""},{"path":"/reference/gps2utc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GPS time to UTC — gps2utc","text":"POSIXct UTC time.","code":""},{"path":"/reference/har_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonic Mean Ignoring NA — har_mean","title":"Harmonic Mean Ignoring NA — har_mean","text":"Compute harmonic mean numeric vector, ignoring NA values.","code":""},{"path":"/reference/har_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonic Mean Ignoring NA — har_mean","text":"","code":"har_mean(x, na.rm = T)"},{"path":"/reference/har_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonic Mean Ignoring NA — har_mean","text":"x numeric vector. na.rm Logical (default TRUE). Whether remove NA values.","code":""},{"path":"/reference/har_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonic Mean Ignoring NA — har_mean","text":"numeric scalar representing harmonic mean.","code":""},{"path":"/reference/har_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonic Mean Ignoring NA — har_mean","text":"Harmonic mean useful averaging rates reciprocal quantities. defined length(x) / sum(1/x).","code":""},{"path":"/reference/init_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize pipeline environment — init_pipe","title":"Initialize pipeline environment — init_pipe","text":"Initializes global pipeline variables required anomaly detection pipeline, including previous batch placeholders, detector-wise result containers, coincidence list. function designed run beginning `pipe()` execution.","code":""},{"path":"/reference/init_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize pipeline environment — init_pipe","text":"","code":"init_pipe(dets = c(\"H1\", \"L1\"))"},{"path":"/reference/init_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize pipeline environment — init_pipe","text":"dets character vector detector names. Defaults c(\"H1\", \"L1\").","code":""},{"path":"/reference/init_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize pipeline environment — init_pipe","text":"None. function assigns prev_batch, res.net, coinc.lis calling environment.","code":""},{"path":"/reference/inner.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute inner product between two vectors — inner","title":"Compute inner product between two vectors — inner","text":"Compute inner product two vectors","code":""},{"path":"/reference/inner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute inner product between two vectors — inner","text":"","code":"inner(x, y)"},{"path":"/reference/inner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute inner product between two vectors — inner","text":"x complex numeric vector. y complex numeric vector.","code":""},{"path":"/reference/inner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute inner product between two vectors — inner","text":"Complex scalar. Inner product `x` `y`.","code":""},{"path":"/reference/interp2d.html","id":null,"dir":"Reference","previous_headings":"","what":"2D Interpolation for Surface Data — interp2d","title":"2D Interpolation for Surface Data — interp2d","text":"Interpolate 2D surface (z-values) across new grid using bilinear spline methods.","code":""},{"path":"/reference/interp2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D Interpolation for Surface Data — interp2d","text":"","code":"interp2d(x, y, z, xout, yout, method = \"linear\")"},{"path":"/reference/interp2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D Interpolation for Surface Data — interp2d","text":"x numeric vector. Original x-axis grid. y numeric vector. Original y-axis grid. z numeric matrix. Original z-values (dim: length(x) × length(y)). xout numeric vector. Output x grid. yout numeric vector. Output y grid. method character. Interpolation method: \"linear\" (default) \"spline\".","code":""},{"path":"/reference/interp2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2D Interpolation for Surface Data — interp2d","text":"list x, y, interpolated z matrix.","code":""},{"path":"/reference/interp_psd.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate PSD Return a new PSD that has been interpolated to the desired delta_f — interp_psd","title":"Interpolate PSD Return a new PSD that has been interpolated to the desired delta_f — interp_psd","text":"Interpolate PSD Return new PSD interpolated desired delta_f","code":""},{"path":"/reference/interp_psd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate PSD Return a new PSD that has been interpolated to the desired delta_f — interp_psd","text":"","code":"interp_psd(fs, delta_f)"},{"path":"/reference/interp_psd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate PSD Return a new PSD that has been interpolated to the desired delta_f — interp_psd","text":"fs `fs` object. Frequency series interpolated. delta_f numeric. desired delta_f output","code":""},{"path":"/reference/inv_spec_trunc_psd.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Spectrum Truncation — inv_spec_trunc_psd","title":"Inverse Spectrum Truncation — inv_spec_trunc_psd","text":"Inverse Spectrum Truncation","code":""},{"path":"/reference/inv_spec_trunc_psd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Spectrum Truncation — inv_spec_trunc_psd","text":"","code":"inv_spec_trunc_psd(fs, max_filter_len, fl = NULL, trunc_method = NULL)"},{"path":"/reference/inv_spec_trunc_psd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Spectrum Truncation — inv_spec_trunc_psd","text":"fs `fs` object PSD. max_filter_len numeric. fl numeric. Low-frequency-cutoff. trunc_method window function. truncating spectrum.","code":""},{"path":"/reference/iqr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify outliers using robust IQR method — iqr2","title":"Identify outliers using robust IQR method — iqr2","text":"Detects anomalous observations numeric vector using IQR-based rule enhanced robustness optional verbose reporting. cutoff threshold scaled tunable factor \\((0.15/\\alpha)\\).","code":""},{"path":"/reference/iqr2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify outliers using robust IQR method — iqr2","text":"","code":"iqr2(x, alpha = 0.05, max_anoms = 0.2, verbose = FALSE)"},{"path":"/reference/iqr2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify outliers using robust IQR method — iqr2","text":"x numeric vector. alpha numeric (default: 0.05). Controls sensitivity outlier detection. Smaller values yield broader thresholds. max_anoms numeric 0 1 (default: 0.2). Maximum fraction data points flagged outliers. verbose Logical (default: FALSE). TRUE, returns detailed outlier report; otherwise returns binary vector.","code":""},{"path":"/reference/iqr2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify outliers using robust IQR method — iqr2","text":"verbose = FALSE, returns integer vector 0s 1s (length x), 1 indicates outlier. verbose = TRUE, returns list following elements: outlier Binary vector outlier flags (1 = outlier). outlier_idx Indices detected outliers. outlier_vals Values detected outliers. outlier_direction Direction anomaly (\"\" \"\"). critical_limits Named vector lower upper bounds used outlier detection. outlier_report Tibble containing values, limits, direction annotations.","code":""},{"path":"/reference/iqr2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify outliers using robust IQR method — iqr2","text":"function based IQR-based approach used anomalize, modifies output return binary flags (1 = outlier, 0 = normal) instead string labels (\"Yes\", \"\"). also removes dependency pipe operators expresses logic using explicit data manipulation functions clarity standalone usage. detection threshold defined : $$[Q1 - (0.15 / \\alpha) \\cdot IQR, \\; Q3 + (0.15 / \\alpha) \\cdot IQR]$$ IQR = Q3 - Q1. Among points beyond range, top max_anoms × length(x) retained based magnitude deviation.","code":""},{"path":"/reference/iqr2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify outliers using robust IQR method — iqr2","text":"implementation adapted anomalize::iqr() function: https://business-science.github.io/anomalize/index.html","code":""},{"path":"/reference/is.anomdet.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if anomalies were detected — is.anomdet","title":"Check if anomalies were detected — is.anomdet","text":"Returns `TRUE` given `proc` data frame contains rows `anomaly == 1`.","code":""},{"path":"/reference/is.anomdet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if anomalies were detected — is.anomdet","text":"","code":"is.anomdet(proc)"},{"path":"/reference/is.anomdet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if anomalies were detected — is.anomdet","text":"proc data frame includes `anomaly` column binary flags (0 1).","code":""},{"path":"/reference/is.anomdet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if anomalies were detected — is.anomdet","text":"logical value: `TRUE` anomalies detected, `FALSE` otherwise.","code":""},{"path":"/reference/legend_inside.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme wrapper for legend inside plot area — legend_inside","title":"Theme wrapper for legend inside plot area — legend_inside","text":"Theme wrapper legend inside plot area","code":""},{"path":"/reference/legend_inside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme wrapper for legend inside plot area — legend_inside","text":"","code":"legend_inside(pos = c(1, 1), jus = c(1, 1), ...)"},{"path":"/reference/legend_inside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme wrapper for legend inside plot area — legend_inside","text":"pos Numeric vector (x, y) position inside plot area (default: c(1, 1)). jus Numeric vector justification (default: c(1, 1)). ... Additional theme arguments passed theme().","code":""},{"path":"/reference/legend_inside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme wrapper for legend inside plot area — legend_inside","text":"list ggplot2 theme settings internal legend placement.","code":""},{"path":"/reference/list.append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append or assign a value into a nested list — list.append","title":"Append or assign a value into a nested list — list.append","text":"Adds new element nested list, either unnamed entry appended end named entry assigned specified key.","code":""},{"path":"/reference/list.append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append or assign a value into a nested list — list.append","text":"","code":"list.append(list, where, value, name = NULL)"},{"path":"/reference/list.append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append or assign a value into a nested list — list.append","text":"list list object sublist . character string indicating name sublist modify. value value appended assigned. name Optional. provided, value assigned name. Otherwise, appended unnamed.","code":""},{"path":"/reference/list.append.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append or assign a value into a nested list — list.append","text":"modified list object.","code":""},{"path":"/reference/list_detector.html","id":null,"dir":"Reference","previous_headings":"","what":"List detectors available for a given GWOSC observation run — list_detector","title":"List detectors available for a given GWOSC observation run — list_detector","text":"Return detector identifiers available particular GWOSC observation run (example \"H1\", \"L1\", \"V1\"). Use avoid passing invalid detector names get_segment().","code":""},{"path":"/reference/list_detector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List detectors available for a given GWOSC observation run — list_detector","text":"","code":"list_detector(obsrun, verbose = FALSE)"},{"path":"/reference/list_detector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List detectors available for a given GWOSC observation run — list_detector","text":"obsrun Character scalar. Observation run identifier (e.g. \"O1\", \"O2\", \"O3a\"). Must single string returned list_obsrun() (otherwise known exist). verbose Logical, default FALSE. TRUE, print short structure summary JSON returned GWOSC endpoint debugging.","code":""},{"path":"/reference/list_detector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List detectors available for a given GWOSC observation run — list_detector","text":"character vector detector names available requested run.","code":""},{"path":"/reference/list_detector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List detectors available for a given GWOSC observation run — list_detector","text":"function queries https://gwosc.org/api/v2/runs/<obsrun> extracts detectors field returned JSON. field missing request fails, descriptive error raised. Use list_obsrun() discover valid run names.","code":""},{"path":"/reference/list_detector.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List detectors available for a given GWOSC observation run — list_detector","text":"https://gwosc.org/api/","code":""},{"path":[]},{"path":"/reference/list_detector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List detectors available for a given GWOSC observation run — list_detector","text":"","code":"if (FALSE) { # \\dontrun{ runs <- list_obsrun() detectors <- list_detector(runs[1]) print(detectors) } # }"},{"path":"/reference/list_gwosc_event.html","id":null,"dir":"Reference","previous_headings":"","what":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","title":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","text":"Query GWOSC API v2 `/api/v2/events` endpoint return character vector known event names (e.g. \"GW150914\", \"GW151226\", ...).","code":""},{"path":"/reference/list_gwosc_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","text":"","code":"list_gwosc_event(verbose = FALSE)"},{"path":"/reference/list_gwosc_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","text":"verbose Logical scalar. TRUE, print progress messages. Default FALSE.","code":""},{"path":"/reference/list_gwosc_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","text":"Character vector event names.","code":""},{"path":"/reference/list_gwosc_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","text":"function automatically follows pagination (`next` link API response) pages retrieved. attempts Accept header strategies robust GWOSC API variations.","code":""},{"path":"/reference/list_gwosc_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List GW event nicknames from GWOSC (API v2) — list_gwosc_event","text":"","code":"if (FALSE) { # \\dontrun{ events <- list_gwosc_event() head(events) } # }"},{"path":"/reference/list_gwosc_param.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available GWOSC parameter names — list_gwosc_param","title":"List all available GWOSC parameter names — list_gwosc_param","text":"Returns character vector valid parameter names can used get_gwosc_param.","code":""},{"path":"/reference/list_gwosc_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available GWOSC parameter names — list_gwosc_param","text":"","code":"list_gwosc_param()"},{"path":"/reference/list_gwosc_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available GWOSC parameter names — list_gwosc_param","text":"character vector parameter names.","code":""},{"path":[]},{"path":"/reference/list_gwosc_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all available GWOSC parameter names — list_gwosc_param","text":"","code":"if (FALSE) { # \\dontrun{ list_gwosc_param() } # }"},{"path":"/reference/list_obsrun.html","id":null,"dir":"Reference","previous_headings":"","what":"List available observation runs from the GWOSC API — list_obsrun","title":"List available observation runs from the GWOSC API — list_obsrun","text":"Retrieve canonical names observation runs available GWOSC (example `\"O1\"`, `\"O2\"`, `\"O3a\"`, ...). recommended first call interactive usage: use returned run names list_detector() get_segment() guess valid run identifiers.","code":""},{"path":"/reference/list_obsrun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available observation runs from the GWOSC API — list_obsrun","text":"","code":"list_obsrun(verbose = FALSE)"},{"path":"/reference/list_obsrun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available observation runs from the GWOSC API — list_obsrun","text":"verbose Logical, default FALSE. TRUE, print short structure summary JSON returned GWOSC endpoint help debugging connectivity API changes.","code":""},{"path":"/reference/list_obsrun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available observation runs from the GWOSC API — list_obsrun","text":"character vector available observation-run names (attributes).","code":""},{"path":"/reference/list_obsrun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List available observation runs from the GWOSC API — list_obsrun","text":"function uses GWOSC v2 API robustly handles common JSON shapes returned server. helper queries https://gwosc.org/api/v2/runs. network request fails API response shape unexpected, descriptive error raised. Use verbose = TRUE inspect raw JSON structure diagnosing problems.","code":""},{"path":"/reference/list_obsrun.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List available observation runs from the GWOSC API — list_obsrun","text":"https://gwosc.org/api/","code":""},{"path":[]},{"path":"/reference/list_obsrun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available observation runs from the GWOSC API — list_obsrun","text":"","code":"if (FALSE) { # \\dontrun{ # Typical interactive workflow: runs <- list_obsrun() print(runs) # Choose a run, then inspect detectors: list_detector(runs[1]) } # }"},{"path":"/reference/list_timelines.html","id":null,"dir":"Reference","previous_headings":"","what":"List timelines available for a given run — list_timelines","title":"List timelines available for a given run — list_timelines","text":"Return timelines (e.g. \"H1_DATA\", \"H1_BURST_CAT2\") available run.","code":""},{"path":"/reference/list_timelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List timelines available for a given run — list_timelines","text":"","code":"list_timelines(obsrun, verbose = FALSE)"},{"path":"/reference/list_timelines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List timelines available for a given run — list_timelines","text":"obsrun character run id, e.g. \"O1\" verbose logical debugging","code":""},{"path":"/reference/list_timelines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List timelines available for a given run — list_timelines","text":"character vector timeline names","code":""},{"path":"/reference/ma.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-sided Centered Moving Average Smoother — ma","title":"Two-sided Centered Moving Average Smoother — ma","text":"Applies centered moving average filter time series using either rectangular window (default) custom window function. user-supplied window function provided via w.func, called w.func(order, ...) must return numeric vector length order.","code":""},{"path":"/reference/ma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-sided Centered Moving Average Smoother — ma","text":"","code":"ma(ts, order, na.rm = T, w.func = NULL, ...)"},{"path":"/reference/ma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-sided Centered Moving Average Smoother — ma","text":"ts `ts` object smoothed. order integer specifying moving average window size. Must ≥ 1. na.rm Logical. `TRUE` (default), removes `NA` values introduced filtering. w.func Optional function generate weight vector given `order`. return numeric vector length `order`. ... Additional arguments passed `w.func`, specified.","code":""},{"path":"/reference/ma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-sided Centered Moving Average Smoother — ma","text":"smoothed `ts` object attributes: collector Set `\"single\"` bookkeeping. q_order order moving average used.","code":""},{"path":"/reference/ma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-sided Centered Moving Average Smoother — ma","text":"","code":"if (FALSE) { # \\dontrun{ ts_data <- ts(rnorm(100)) ma(ts_data, order = 5)  # Using a Tukey window if (requireNamespace(\"bspec\", quietly = TRUE)) {     ma(ts_data, order = 11, w.func = bspec::tukeywindow, r = 0.3) } } # }"},{"path":"/reference/mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Median Absolute Error for sample — mae","title":"Median Absolute Error for sample — mae","text":"Median Absolute Error sample","code":""},{"path":"/reference/mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median Absolute Error for sample — mae","text":"","code":"mae(x)"},{"path":"/reference/mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median Absolute Error for sample — mae","text":"x numeric vector.","code":""},{"path":"/reference/mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median Absolute Error for sample — mae","text":"numeric. Sample median absolute error.","code":""},{"path":"/reference/matched_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Matched filter (R ver.) — matched_filter","title":"Matched filter (R ver.) — matched_filter","text":"digged source codes translate Python R.","code":""},{"path":"/reference/matched_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matched filter (R ver.) — matched_filter","text":"","code":"matched_filter(template, data, psd = NULL, fl = NULL, fu = NULL, h.norm = NULL)"},{"path":"/reference/matched_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matched filter (R ver.) — matched_filter","text":"template `ts` object waveform template. data `ts` object data. psd `fs` object PSD. fl numeric. Lower frequency cutoff. fu numeric. Upper frequency cutoff. h.norm custom normalization factor.","code":""},{"path":"/reference/matched_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matched filter (R ver.) — matched_filter","text":"list containing: `snr.ts`, `snr.fs`, `norm`, SNR `ts` `fs` object normalization factor, respectively. Final SNR norm*abs(snr.ts)","code":""},{"path":"/reference/message_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Message Conditionally by Iteration — message_by","title":"Print Message Conditionally by Iteration — message_by","text":"Print message every verbose-th iteration loop.","code":""},{"path":"/reference/message_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Message Conditionally by Iteration — message_by","text":"","code":"message_by(i = i, verbose = T, msg)"},{"path":"/reference/message_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Message Conditionally by Iteration — message_by","text":"Integer indicating current iteration index. verbose Logical integer; TRUE, print every iteration; integer, print every verbose-th iteration. msg character string printed.","code":""},{"path":"/reference/message_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Message Conditionally by Iteration — message_by","text":"None.","code":""},{"path":"/reference/message_verb.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally Print Message — message_verb","title":"Conditionally Print Message — message_verb","text":"Print message v = TRUE.","code":""},{"path":"/reference/message_verb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally Print Message — message_verb","text":"","code":"message_verb(..., v = TRUE)"},{"path":"/reference/message_verb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally Print Message — message_verb","text":"... Character strings print. v Logical; whether print message.","code":""},{"path":"/reference/message_verb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally Print Message — message_verb","text":"None.","code":""},{"path":"/reference/mmed.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply median filter to a `ts` — mmed","title":"Apply median filter to a `ts` — mmed","text":"Apply median filter `ts`","code":""},{"path":"/reference/mmed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply median filter to a `ts` — mmed","text":"","code":"mmed(ts, order)"},{"path":"/reference/mmed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply median filter to a `ts` — mmed","text":"ts `ts` object. order odd integer. Window size median filter.","code":""},{"path":"/reference/mmed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply median filter to a `ts` — mmed","text":"smoothed `ts` object.","code":""},{"path":"/reference/mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Mode — mode","title":"Mode — mode","text":"Get frequent value input vector.","code":""},{"path":"/reference/mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mode — mode","text":"","code":"mode(x)"},{"path":"/reference/mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mode — mode","text":"x numeric vector.","code":""},{"path":"/reference/mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mode — mode","text":"numeric. mode value.","code":""},{"path":"/reference/oom.html","id":null,"dir":"Reference","previous_headings":"","what":"Order of Magnitude — oom","title":"Order of Magnitude — oom","text":"Computes order magnitude (base-10 logarithm floor) positive number.","code":""},{"path":"/reference/oom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order of Magnitude — oom","text":"","code":"oom(x)"},{"path":"/reference/oom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order of Magnitude — oom","text":"x positive numeric value vector.","code":""},{"path":"/reference/oom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order of Magnitude — oom","text":"integer vector integers representing floor(log10(x)).","code":""},{"path":"/reference/oscillo_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Common ggplot Components for Oscillogram Plot — oscillo_option","title":"Common ggplot Components for Oscillogram Plot — oscillo_option","text":"Generate list ggplot2 components consistent oscillogram theme.","code":""},{"path":"/reference/oscillo_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common ggplot Components for Oscillogram Plot — oscillo_option","text":"","code":"oscillo_option(ts, tzero = 0, title = NULL)"},{"path":"/reference/oscillo_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common ggplot Components for Oscillogram Plot — oscillo_option","text":"ts time series object. tzero numeric value time offset. title character string plot title.","code":""},{"path":"/reference/oscillo_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common ggplot Components for Oscillogram Plot — oscillo_option","text":"list ggplot2 elements.","code":""},{"path":"/reference/overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate real overlap — overlap","title":"Calculate real overlap — overlap","text":"Return overlap two TimeSeries FrequencySeries","code":""},{"path":"/reference/overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate real overlap — overlap","text":"","code":"overlap(   vec1,   vec2,   psd = NULL,   low_frequency_cutoff = NULL,   high_frequency_cutoff = NULL,   normalized = TRUE )"},{"path":"/reference/overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate real overlap — overlap","text":"vec1 `ts` `fs`. input vector containing waveform. vec2 `ts` `fs`. input vector containing waveform. psd `fs` object (default: `NULL`). power spectral density weight overlap. low_frequency_cutoff numeric (default: `NULL`). frequency begin overlap. high_frequency_cutoff numeric (default: `NULL`). frequency stop overlap. normalized logical (default: `TRUE`). Set overlap normalized. true, range 0 1.","code":""},{"path":"/reference/overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate real overlap — overlap","text":"overlap: numeric","code":""},{"path":"/reference/overlap_cplx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate complex overlap — overlap_cplx","title":"Calculate complex overlap — overlap_cplx","text":"Return complex overlap two TimeSeries FrequencySeries.","code":""},{"path":"/reference/overlap_cplx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate complex overlap — overlap_cplx","text":"","code":"overlap_cplx(   vec1,   vec2,   psd = NULL,   low_frequency_cutoff = NULL,   high_frequency_cutoff = NULL,   normalized = TRUE )"},{"path":"/reference/overlap_cplx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate complex overlap — overlap_cplx","text":"vec1 `ts` `fs`. input vector containing waveform. vec2 `ts` `fs`. input vector containing waveform. psd `fs` object (default: `NULL`). power spectral density weight overlap. low_frequency_cutoff numeric (default: `NULL`). frequency begin overlap. high_frequency_cutoff numeric (default: `NULL`). frequency stop overlap. normalized logical (default: `TRUE`). Set overlap normalized. true, range 0 1.","code":""},{"path":"/reference/overlap_cplx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate complex overlap — overlap_cplx","text":"overlap: complex","code":""},{"path":"/reference/pad.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad a `ts` with zeros — pad","title":"Pad a `ts` with zeros — pad","text":"Pad `ts` zeros","code":""},{"path":"/reference/pad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad a `ts` with zeros — pad","text":"","code":"pad(ts, tstart, tend, at = 0)"},{"path":"/reference/pad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad a `ts` with zeros — pad","text":"ts `ts` object. tstart numeric. Start time output. tend numeric. End time output. numeric. Time inject original `ts`.","code":""},{"path":"/reference/pad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad a `ts` with zeros — pad","text":"padded `ts` object.","code":""},{"path":"/reference/pad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad a `ts` with zeros — pad","text":"","code":"if (FALSE) { # \\dontrun{ # Original signal from t = 0 with 0.1 sec spacing x <- ts(c(1, 2, 3, 4, 5), deltat = 0.1)  # Pad x into a 1-second series starting at t = 1.3 padded <- pad(x, tstart = 1, tend = 2, at = 1.3) # shows time indices from 1.0 to 2.0 time(padded) # shows inserted values at 1.3, 1.4, ..., 1.7 padded } # }"},{"path":"/reference/paste_wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Working Directory Path with File Name — paste_wd","title":"Combine Working Directory Path with File Name — paste_wd","text":"Concatenate working directory file name optional prefix.","code":""},{"path":"/reference/paste_wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Working Directory Path with File Name — paste_wd","text":"","code":"paste_wd(file, prefix = NULL, dir = getwd())"},{"path":"/reference/paste_wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Working Directory Path with File Name — paste_wd","text":"file character. File name (without extension). prefix character (optional). provided, result becomes \"prefix_file\". dir character. Working directory path (default: current working directory).","code":""},{"path":"/reference/paste_wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Working Directory Path with File Name — paste_wd","text":"character string representing full file path.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Main anomaly detection pipeline for a single detector — pipe","title":"Main anomaly detection pipeline for a single detector — pipe","text":"function processes one batch time-series data single detector using specified architecture updates accumulated statistics batches.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main anomaly detection pipeline for a single detector — pipe","text":"","code":"pipe(curr_batch, prev_batch, res.list, arch_params, verb = T)"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main anomaly detection pipeline for a single detector — pipe","text":"curr_batch `ts` object representing current batch data. prev_batch `ts` object previous batch; used boundary-aware processing. res.list named list containing results far, typically `init_pipe()`. arch_params named list Rist containing architecture-related parameters: arch Main detection function pipeline. n_missed List `Mh` `Mt`, specifying many points include . DQ Optional. DQ flag include, e.g., `\"BURST_CAT2\"`. P_update Optional. Threshold P0 filtering update logic. verb Logical; `TRUE`, prints progress messages.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main anomaly detection pipeline for a single detector — pipe","text":"updated `res.list` fields: proc Processed dataframe current batch. stat Current batch statistics. lamb Lambda estimates (, c) update. ustat Updated cumulative statistics including `last_tcen`.","code":""},{"path":"/reference/pipe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Main anomaly detection pipeline for a single detector — pipe","text":"pipeline includes: Concatenating previous current batches Running detection algorithm (`arch`) Filtering aligning results current batch Adding DQ flags computing anomaly statistics Computing significance probabilities (Poisson, Exponential, P0) Updating cumulative statistics across batches","code":""},{"path":"/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main anomaly detection pipeline for a single detector — pipe","text":"","code":"if (FALSE) { # \\dontrun{ # Assume you have curr_batch and prev_batch as ts objects dets <- c(\"H1\", \"L1\") arch_params <- config_pipe() init <- init_pipe(dets = dets) prev_batch <- init[[1]] res.net <- init[[2]]  result <- pipe(curr_batch, prev_batch[[\"H1\"]], res.net[[\"H1\"]], arch_params) } # }"},{"path":"/reference/pipe_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Run anomaly detection pipeline over detector network — pipe_net","title":"Run anomaly detection pipeline over detector network — pipe_net","text":"function applies single-detector pipe() function across network detectors (e.g., H1 L1), managing parallel execution, results updating, coincidence analysis.","code":""},{"path":"/reference/pipe_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run anomaly detection pipeline over detector network — pipe_net","text":"","code":"pipe_net(   batch_net,   prev_batch,   res.net,   coinc.lis,   arch_params,   update_model = TRUE,   verb = TRUE,   debug = FALSE )"},{"path":"/reference/pipe_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run anomaly detection pipeline over detector network — pipe_net","text":"batch_net named list current batches per detector. element ts object. prev_batch named list previous batches per detector (used continuity AR/MA). res.net named list results (updated per detector). coinc.lis list previous coincidence results (appended). arch_params list pipeline configuration parameters; see config_pipe. update_model Logical. Whether update internal statistics across batches. verb Logical. TRUE, print lambda diagnostics. debug Logical. TRUE, runs sequentially debugging (parallelism).","code":""},{"path":"/reference/pipe_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run anomaly detection pipeline over detector network — pipe_net","text":"function updates following parent environment: res.net: Updated detection results per detector. prev_batch: Updated previous batch list next call. coinc.lis: Appended coincidence analysis result. objects expected initialized beforehand (e.g., via init_pipe).","code":""},{"path":"/reference/pipe_net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run anomaly detection pipeline over detector network — pipe_net","text":"detector, function calls internal pipe function current batch, previous batch, accumulated results. Parallel execution performed via foreach + dopar unless debug = TRUE, case runs sequentially. Coincidence analysis conducted using coincide_P0 detectors valid results.","code":""},{"path":"/reference/pipe_net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run anomaly detection pipeline over detector network — pipe_net","text":"","code":"# Run detection pipeline over current batch if (FALSE) { # \\dontrun{ pipe_net(batch_net, prev_batch, res.net, coinc.lis, arch_params) } # }"},{"path":"/reference/plot.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Frequency Series (`fs`) — plot.fs","title":"Plot a Frequency Series (`fs`) — plot.fs","text":"Visualizes amplitude (PSD) `fs` object using ggplot2.","code":""},{"path":"/reference/plot.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Frequency Series (`fs`) — plot.fs","text":"","code":"# S3 method for class 'fs' plot(   x,   ...,   log = \"xy\",   xlab = \"Frequency (Hz)\",   ylab = \"PSD\",   xlim = NULL,   ylim = NULL )"},{"path":"/reference/plot.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Frequency Series (`fs`) — plot.fs","text":"x `fs` object. ... Additional arguments `geom_line()`. log character (\"x\", \"y\", \"xy\") control log scaling. xlab character. X-axis label (default: \"Frequency (Hz)\"). ylab character. Y-axis label (default: \"PSD\"). xlim numeric vector length 2 specifying x-axis limits. ylim numeric vector length 2 specifying y-axis limits.","code":""},{"path":"/reference/plot.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Frequency Series (`fs`) — plot.fs","text":"ggplot object.","code":""},{"path":"/reference/plot_aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot AIC curve for AR model — plot_aic","title":"Plot AIC curve for AR model — plot_aic","text":"Plot AIC curve AR model","code":""},{"path":"/reference/plot_aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot AIC curve for AR model — plot_aic","text":"","code":"plot_aic(ar)"},{"path":"/reference/plot_aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot AIC curve for AR model — plot_aic","text":"ar `ar` object.","code":""},{"path":"/reference/plot_aic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot AIC curve for AR model — plot_aic","text":"ggplot AIC plot zoomed-inset.","code":""},{"path":"/reference/plot_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot anomalies with error bands and significance — plot_anomalies","title":"Plot anomalies with error bands and significance — plot_anomalies","text":"Plot anomalies error bands significance","code":""},{"path":"/reference/plot_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot anomalies with error bands and significance — plot_anomalies","text":"","code":"plot_anomalies(   anom.df,   tzero = NULL,   val_col = \"observed\",   time_col = \"GPS\",   err_lwr = NULL,   err_upr = NULL,   p_crit = 0.05,   p_col = \"P0\" )"},{"path":"/reference/plot_anomalies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot anomalies with error bands and significance — plot_anomalies","text":"anom.df data.frame anomaly results. tzero Optional time zero align time axis. val_col Column name observed signal value. time_col Column name time values (usually \"GPS\"). err_lwr Column name lower error band. NULL, auto-detect column names. err_upr Column name upper error band. NULL, auto-detect column names. p_crit Critical p-value threshold (default: 0.05). p_col Column name p-values.","code":""},{"path":"/reference/plot_anomalies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot anomalies with error bands and significance — plot_anomalies","text":"ggplot object showing anomalies uncertainty bands.","code":""},{"path":"/reference/plot_anomalies_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot anomalies for multiple detectors — plot_anomalies_multi","title":"Plot anomalies for multiple detectors — plot_anomalies_multi","text":"Plot anomalies multiple detectors","code":""},{"path":"/reference/plot_anomalies_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot anomalies for multiple detectors — plot_anomalies_multi","text":"","code":"plot_anomalies_multi(anom.det, ...)"},{"path":"/reference/plot_anomalies_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot anomalies for multiple detectors — plot_anomalies_multi","text":"anom.det data.frame anomaly results includes detector info column \"det\". ... Passed plot_anomalies().","code":""},{"path":"/reference/plot_anomalies_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot anomalies for multiple detectors — plot_anomalies_multi","text":"faceted ggplot object showing anomaly results per detector.","code":""},{"path":"/reference/plot_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histogram of background detection statistic — plot_background","title":"Plot histogram of background detection statistic — plot_background","text":"Plot histogram background detection statistic","code":""},{"path":"/reference/plot_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histogram of background detection statistic — plot_background","text":"","code":"plot_background(   S.bkg.vec,   color = \"black\",   binwidth = 0.2,   xlimit = c(7, 30),   ylimit = c(0.005, 500),   factor = 1 )"},{"path":"/reference/plot_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histogram of background detection statistic — plot_background","text":"S.bkg.vec numeric vector background detection statistic (e.g., \\(\\mathcal{S}\\) values). color character string specifying histogram color. binwidth Numeric. Width histogram bins (default: 0.2). xlimit Numeric vector length 2. Limits x-axis (default: c(7, 30)). ylimit Numeric vector length 2. Limits y-axis (log10 scale, default: c(5e-3, 5e2)). factor Numeric. Rescaling factor counts (default: 1).","code":""},{"path":"/reference/plot_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histogram of background detection statistic — plot_background","text":"list one ggplot object named histogram.","code":""},{"path":"/reference/plot_coinc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coincidence significance values over time — plot_coinc","title":"Plot coincidence significance values over time — plot_coinc","text":"Plot coincidence significance values time","code":""},{"path":"/reference/plot_coinc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coincidence significance values over time — plot_coinc","text":"","code":"plot_coinc(   coinc.res,   tzero = NULL,   p_crit = 0.05,   a = 3,   legend.position = \"tr\",   annotate.vals = FALSE,   annotate.thresh = p_crit )"},{"path":"/reference/plot_coinc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coincidence significance values over time — plot_coinc","text":"coinc.res data.frame returned coincide_P0(). tzero Optional GPS time align x-axis (default: first timestamp coinc.res). p_crit Critical p-value draw significance threshold (default: 0.05). Scaling factor significance function (default: 3). legend.position Position legend inside plot. One \"tr\", \"tl\", \"br\", \"bl\". annotate.vals logical. Annotate values threshold (default: FALSE). annotate.thresh numeric. Values annotated corresponding probability smaller `annotate.thresh`,","code":""},{"path":"/reference/plot_coinc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot coincidence significance values over time — plot_coinc","text":"ggplot object time-series coincidence significance.","code":""},{"path":"/reference/plot_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot lambda values over time — plot_lambda","title":"Plot lambda values over time — plot_lambda","text":"Plot lambda values time","code":""},{"path":"/reference/plot_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot lambda values over time — plot_lambda","text":"","code":"plot_lambda(res.net, lambda = c(\"a\", \"c\"), chunk_len = 1, t_from = NULL, ...)"},{"path":"/reference/plot_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot lambda values over time — plot_lambda","text":"res.net named list detector results, including $lamb lambda statistics. lambda One \"\" \"c\", indicating \\(\\lambda_a\\) \\(\\lambda_c\\) (default: \"\"). chunk_len Chunk duration seconds time axis. t_from Optional origin time annotate time axis. ... Additional arguments (currently unused).","code":""},{"path":"/reference/plot_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot lambda values over time — plot_lambda","text":"ggplot object showing update history lambda values.","code":""},{"path":"/reference/plot_onsource.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot on-source detection statistic as discrete points — plot_onsource","title":"Plot on-source detection statistic as discrete points — plot_onsource","text":"Plot -source detection statistic discrete points","code":""},{"path":"/reference/plot_onsource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot on-source detection statistic as discrete points — plot_onsource","text":"","code":"plot_onsource(S.vec, color = \"black\", shape = 24, binwidth = 0.2)"},{"path":"/reference/plot_onsource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot on-source detection statistic as discrete points — plot_onsource","text":"S.vec numeric vector -source detection statistic (e.g., \\(\\mathcal{S}\\) values). color character string specifying point color (default: \"black\"). shape integer specifying ggplot2 point shape (default: 24, triangle). binwidth numeric scalar indicating histogram bin width (default: 0.2).","code":""},{"path":"/reference/plot_onsource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot on-source detection statistic as discrete points — plot_onsource","text":"ggplot object showing discrete histogram-like point distribution.","code":""},{"path":"/reference/plot_oscillo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Single Oscillogram — plot_oscillo","title":"Plot a Single Oscillogram — plot_oscillo","text":"Generate line plot single time series (oscillogram).","code":""},{"path":"/reference/plot_oscillo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Single Oscillogram — plot_oscillo","text":"","code":"plot_oscillo(   ts,   tzero = NULL,   trange = NULL,   ylim = \"pm\",   title = NULL,   size = 0.3,   ... )"},{"path":"/reference/plot_oscillo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Single Oscillogram — plot_oscillo","text":"ts numeric time series object. tzero numeric value indicating time shift (default: NULL). trange numeric vector specifying time range display. ylim Either 'pm' numeric vector length 2. title character string specifying plot title. size numeric value line width (default: 0.3). ... Additional arguments ggplot2::geom_line.","code":""},{"path":"/reference/plot_oscillo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Single Oscillogram — plot_oscillo","text":"ggplot object.","code":""},{"path":"/reference/plot_oscillo_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Multiple Oscillograms in Facet Layout — plot_oscillo_multi","title":"Plot Multiple Oscillograms in Facet Layout — plot_oscillo_multi","text":"Plot multiple time series facet_wrap.","code":""},{"path":"/reference/plot_oscillo_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Multiple Oscillograms in Facet Layout — plot_oscillo_multi","text":"","code":"plot_oscillo_multi(   ts.df,   tzero = NULL,   trange = NULL,   facet.scale = \"fixed\",   facet.label = NULL,   order.of.mag = TRUE,   title = NULL,   color = NULL,   width = 0.3,   ... )"},{"path":"/reference/plot_oscillo_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Multiple Oscillograms in Facet Layout — plot_oscillo_multi","text":"ts.df data frame containing time multiple variables. tzero numeric value indicating time shift (default: NULL). trange numeric vector specifying time range display. facet.scale One \"fixed\", \"free_y\", \"free_x\". facet.label Character vector facet labels. order..mag Logical; whether rescale y-axis using magnitude order. title character string specifying plot title. color character line color. width numeric value line width (default: 0.3). ... Additional arguments geom_line.","code":""},{"path":"/reference/plot_oscillo_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Multiple Oscillograms in Facet Layout — plot_oscillo_multi","text":"ggplot object.","code":""},{"path":"/reference/plot_spectro.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Q-Transform Spectrogram with Oscillogram — plot_spectro","title":"Plot Q-Transform Spectrogram with Oscillogram — plot_spectro","text":"Create Q-transform spectrogram stacked oscillogram using ggplot2.","code":""},{"path":"/reference/plot_spectro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Q-Transform Spectrogram with Oscillogram — plot_spectro","text":"","code":"plot_spectro(   ts,   tzero = 0,   trange = NULL,   frange = c(32, 512),   qrange = c(40, 1),   crange = NULL,   tres = 1000,   fres = 1000,   logf = T,   title = NULL,   specScale = FALSE,   specXlabel = FALSE,   specYlabel = TRUE,   specGrid = \"none\",   specColorPal = viridis::viridis(256),   trans = NULL,   specScaleDir = \"vertical\",   specScalePos = \"ul\",   linecolor = \"black\",   osciLegend = FALSE,   osciXlabel = TRUE,   osciYlabel = TRUE,   stack = T,   ... )"},{"path":"/reference/plot_spectro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Q-Transform Spectrogram with Oscillogram — plot_spectro","text":"ts time series object. tzero Time offset (default: 0). trange Time range cropping data. frange Frequency range spectrogram. qrange Q-factor range Q-transform. crange Color range (z-axis) spectrogram. tres Time resolution. fres Frequency resolution. logf Logical; log-scale y-axis (default: TRUE). title Title plot. specScale Logical; Show colorbar spectrogram. specXlabel Logical; Show x-axis label spectrogram. specYlabel Logical; Show y-axis label spectrogram. specGrid Show grid lines (\"x\", \"y\", \"xy\"). specColorPal Color palette. trans Transformation function applied spectrogram values. specScaleDir Direction colorbar. specScalePos Position colorbar (\"ul\", \"ur\", \"bl\", \"br\"). linecolor Line color oscillogram. osciLegend Logical; Show legends oscillogram. osciXlabel Logical; Show x-axis label oscillogram. osciYlabel Logical; Show y-axis label oscillogram. stack Logical; stack spectrogram oscillogram (default: TRUE). ... Additional arguments passed ggarrange.","code":""},{"path":"/reference/plot_spectro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Q-Transform Spectrogram with Oscillogram — plot_spectro","text":"ggplot object, list spec.plot osci.plot stack = FALSE.","code":""},{"path":"/reference/ppois.anom.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute anomaly-tail Poisson probability — ppois.anom","title":"Compute anomaly-tail Poisson probability — ppois.anom","text":"Calculates complementary cumulative distribution function (CCDF) Poisson distribution rate parameter \\(\\lambda\\), starting threshold \\(q\\). function designed evaluate probability observing \\(n \\ge q\\) anomalies cluster, normalized \\(P(n \\ge 1) = 1\\) \\(\\lambda\\) used.","code":""},{"path":"/reference/ppois.anom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute anomaly-tail Poisson probability — ppois.anom","text":"","code":"ppois.anom(q, lambda)"},{"path":"/reference/ppois.anom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute anomaly-tail Poisson probability — ppois.anom","text":"q integer vector integers representing number observed anomalies. lambda positive numeric value representing expected number anomalies (\\(\\lambda\\)).","code":""},{"path":"/reference/ppois.anom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute anomaly-tail Poisson probability — ppois.anom","text":"numeric vector normalized CCDF values \\(P(n \\ge q \\mid \\lambda)\\).","code":""},{"path":"/reference/print.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Print Method for `fs` Class — print.fs","title":"Custom Print Method for `fs` Class — print.fs","text":"Prints summary information `fs` object, including delta_f, flen, associated time-domain metadata available.","code":""},{"path":"/reference/print.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Print Method for `fs` Class — print.fs","text":"","code":"# S3 method for class 'fs' print(x, ..., ts.info = TRUE)"},{"path":"/reference/print.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Print Method for `fs` Class — print.fs","text":"x `fs` object. ... Additional arguments (ignored). ts.info Logical. Whether show associated time-series info (default: TRUE).","code":""},{"path":"/reference/print.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Print Method for `fs` Class — print.fs","text":"None. Used side effects.","code":""},{"path":"/reference/proc2ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert processed data frame to time series — proc2ts","title":"Convert processed data frame to time series — proc2ts","text":"Constructs ts object data frame containing time value columns.","code":""},{"path":"/reference/proc2ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert processed data frame to time series — proc2ts","text":"","code":"proc2ts(proc.df, val_col = \"observed\", time_col = \"GPS\", frequency = 4096)"},{"path":"/reference/proc2ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert processed data frame to time series — proc2ts","text":"proc.df data frame containing processed time-series data. val_col character string. Name column use signal values (default: \"observed\"). time_col character string. Name column use start time GPS seconds (default: \"GPS\"). frequency numeric value. Sampling frequency Hz (default: 4096).","code":""},{"path":"/reference/proc2ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert processed data frame to time series — proc2ts","text":"ts object constructed selected value column, starting time specified time_col.","code":""},{"path":[]},{"path":"/reference/proc2ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert processed data frame to time series — proc2ts","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(GPS = 1000000000 + 0:(4095) / 4096, observed = rnorm(4096)) ts_obj <- proc2ts(df) } # }"},{"path":"/reference/proj_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Project GW polarizations onto multiple detectors — proj_network","title":"Project GW polarizations onto multiple detectors — proj_network","text":"Applies antenna pattern projection gravitational-wave polarizations (hp, hc) network detectors, taking account relative arrival times due Earth's rotation.","code":""},{"path":"/reference/proj_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project GW polarizations onto multiple detectors — proj_network","text":"","code":"proj_network(hp, hc, dets, ra, dec, pol, t_gps, t_ref = \"H1\")"},{"path":"/reference/proj_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project GW polarizations onto multiple detectors — proj_network","text":"hp ts object. Plus polarization waveform. hc ts object. Cross polarization waveform. dets character vector detector abbreviations (e.g., c(\"H1\", \"L1\")). ra numeric. Right Ascension source (radians). dec numeric. Declination source (radians). pol numeric. Polarization angle (radians). t_gps numeric. GPS time signal arrival Earth's center. t_ref character. Reference detector computing relative arrival times (default: \"H1\"). [Currently unused]","code":""},{"path":"/reference/proj_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project GW polarizations onto multiple detectors — proj_network","text":"named list projected ts objects detector, following attributes: \"tgps.net\" Vector GPS arrival times per detector. \"dt_rel\" Matrix pairwise relative time delays detectors. \"tgps_remainder\" Rounding residuals detector’s delay.","code":""},{"path":"/reference/proj_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project GW polarizations onto multiple detectors — proj_network","text":"detector dets, function computes relative arrival time signal based sky location. applies proj_wave project polarizations onto detector using corresponding time antenna pattern.","code":""},{"path":"/reference/proj_network.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Project GW polarizations onto multiple detectors — proj_network","text":"Requires Python environment pycbc available via reticulate.","code":""},{"path":"/reference/proj_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project GW polarizations onto multiple detectors — proj_network","text":"","code":"if (FALSE) { # \\dontrun{ hp <- ts(sin(seq(0, 1, length.out = 4096)), start = 1000000000, fs = 4096) hc <- ts(cos(seq(0, 1, length.out = 4096)), start = 1000000000, fs = 4096) proj <- proj_network(hp, hc,     dets = c(\"H1\", \"L1\"),     ra = 1.0, dec = -0.5,     pol = 0.0, t_gps = 1126259462 ) } # }"},{"path":"/reference/proj_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"Project GW polarizations onto detector — proj_wave","title":"Project GW polarizations onto detector — proj_wave","text":"Computes detector strain projecting plus cross polarizations using Earth rotation antenna pattern.","code":""},{"path":"/reference/proj_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project GW polarizations onto detector — proj_wave","text":"","code":"proj_wave(hp, hc, det, ra, dec, pol, t_gps)"},{"path":"/reference/proj_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project GW polarizations onto detector — proj_wave","text":"hp ts object. Plus polarization waveform. hc ts object. Cross polarization waveform. det character. Detector abbreviation. ra numeric. Right Ascension (radians). dec numeric. Declination (radians). pol numeric. Polarization angle (radians). t_gps numeric. GPS time source arrival Earth's center.","code":""},{"path":"/reference/proj_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project GW polarizations onto detector — proj_wave","text":"projected waveform ts object.","code":""},{"path":"/reference/proj_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project GW polarizations onto detector — proj_wave","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/psd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate power spectral density (PSD) estimate using Welch’s method — psd","title":"Generate power spectral density (PSD) estimate using Welch’s method — psd","text":"function mimics PSD estimation behavior PyCBC's `welch()` function within R pipeline. computes power spectral density time series applying Welch method—segmenting data, applying window, taking median average (robust outliers), interpolating truncating inverse spectrum needed.","code":""},{"path":"/reference/psd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate power spectral density (PSD) estimate using Welch’s method — psd","text":"","code":"psd(ts, sl = 4, fl = 15, delf = NULL, window_func = bspec::hannwindow)"},{"path":"/reference/psd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate power spectral density (PSD) estimate using Welch’s method — psd","text":"ts `ts` time-series object. sl Numeric scalar. Segment length Welch method (time units). fl Numeric scalar. Low-frequency cutoff filter truncation (units `ts` frequency). delf Numeric scalar, optional. Frequency resolution; defaults `frequency(ts) / length(ts)`. window_func Function. window function (e.g., `bspec::hannwindow`) shape segment prior PSD estimation.","code":""},{"path":"/reference/psd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate power spectral density (PSD) estimate using Welch’s method — psd","text":"object class `fs`, representing estimated PSD:   - rows frequency bin,   - interpolated align spacing `delf`,   - processed via inverse-spectrum truncation `fl`.","code":""},{"path":"/reference/psd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate power spectral density (PSD) estimate using Welch’s method — psd","text":"core estimation pipeline proceeds follows:   1. **Welch PSD estimation** using `bspec::welchPSD()`, median averaging robustness.   2. Conversion `fs` object via `fs()`, pairing PSD power `frequency(ts)`-based spacing.   3. **Interpolation** uniform frequency resolution via `interp_psd()`.   4. **Inverse-spectrum truncation** using `inv_spec_trunc_psd()` filter low-frequency components `fl` using provided window. mirrors standard usage `pycbc.psd.welch()` PSD estimates via Welch’s method gravitational-wave data analysis. [oai_citation:1‡PyCBC](https://pycbc.org/pycbc/latest/html/_modules/pycbc/psd/estimate.html)","code":""},{"path":"/reference/psd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate power spectral density (PSD) estimate using Welch’s method — psd","text":"- PyCBC `welch()` documentation via Sphinx: input parameters `seg_len`, `window`, `avg_method='median'`, returns `FrequencySeries` PSD estimates. [oai_citation:2‡PyCBC](https://pycbc.org/pycbc/latest/html/_modules/pycbc/psd/estimate.html)  - General methodology: Welch (1967), use smoothing windows spectral estimation.","code":""},{"path":"/reference/psd_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Gaussian noise from detector PSD — psd_noise","title":"Simulate Gaussian noise from detector PSD — psd_noise","text":"Generate colored Gaussian noise power spectral density given detector.","code":""},{"path":"/reference/psd_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Gaussian noise from detector PSD — psd_noise","text":"","code":"psd_noise(   det,   duration,   tstart,   sampling.freq = 4096,   fl = 15,   delta_f = 1/32,   seed = NULL )"},{"path":"/reference/psd_noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Gaussian noise from detector PSD — psd_noise","text":"det character. Detector abbreviation (\"H1\", \"L1\", \"V1\", \"K1\", \"E1\"). duration numeric. Noise duration (seconds). tstart numeric. Start GPS time noise. sampling.freq numeric. Sampling frequency (Hz). Default: 4096. fl numeric. Lower frequency cutoff. Default: 15 Hz. delta_f numeric. Frequency resolution. Default: 1/32. seed Optional numeric. Random seed reproducibility.","code":""},{"path":"/reference/psd_noise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Gaussian noise from detector PSD — psd_noise","text":"ts object simulated Gaussian noise.","code":""},{"path":"/reference/psd_noise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Gaussian noise from detector PSD — psd_noise","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/qplane.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Q-plane across all Q and f0 tiles — qplane","title":"Compute Q-plane across all Q and f0 tiles — qplane","text":"Evaluate Q-tiles construct Q-transform energy (complex) plane.","code":""},{"path":"/reference/qplane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Q-plane across all Q and f0 tiles — qplane","text":"","code":"qplane(qplane.tile.list, fseries, return_complex = FALSE)"},{"path":"/reference/qplane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Q-plane across all Q and f0 tiles — qplane","text":"qplane.tile.list list Q-tiles (qtiling). fseries fs object. Frequency-series representation data. return_complex Logical. TRUE, return complex-valued transform.","code":""},{"path":"/reference/qplane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Q-plane across all Q and f0 tiles — qplane","text":"list : times Time axis (s) freqs Frequency axis (Hz) plane Q-transform output (matrix)","code":""},{"path":"/reference/qseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Q-transform on a single tile — qseries","title":"Perform Q-transform on a single tile — qseries","text":"Compute Q-transform single Q center frequency tile.","code":""},{"path":"/reference/qseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Q-transform on a single tile — qseries","text":"","code":"qseries(fseries, Q, f0, return_complex = FALSE)"},{"path":"/reference/qseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Q-transform on a single tile — qseries","text":"fseries fs object. Frequency-series representation data. Q numeric. Q value tile. f0 numeric. Center frequency tile. return_complex Logical (default: FALSE). TRUE, return complex time series instead normalized energy.","code":""},{"path":"/reference/qseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Q-transform on a single tile — qseries","text":"ts object representing either normalized energy complex waveform.","code":""},{"path":"/reference/qtiling.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Q-tiling scheme — qtiling","title":"Generate Q-tiling scheme — qtiling","text":"Generate Q-tiles (Q, f0 pairs) Q-planes across frequency range.","code":""},{"path":"/reference/qtiling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Q-tiling scheme — qtiling","text":"","code":"qtiling(fseries, qrange, frange, mismatch = 0.2)"},{"path":"/reference/qtiling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Q-tiling scheme — qtiling","text":"fseries fs object. Frequency-series representation data. qrange numeric vector. Range Q values. frange numeric vector. Frequency range (Hz). mismatch numeric. Mismatch tolerance (default: 0.2).","code":""},{"path":"/reference/qtiling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Q-tiling scheme — qtiling","text":"list Q-planes, containing Q value associated frequency tiles.","code":""},{"path":"/reference/qtransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Q-transform of time series — qtransform","title":"Q-transform of time series — qtransform","text":"Perform Q-transform time series interpolate desired resolution.","code":""},{"path":"/reference/qtransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Q-transform of time series — qtransform","text":"","code":"qtransform(   ts,   delta_t = NULL,   delta_f = NULL,   logfsteps = NULL,   frange = NULL,   qrange = c(4, 64),   mismatch = 0.2,   return_complex = FALSE )"},{"path":"/reference/qtransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Q-transform of time series — qtransform","text":"ts ts object. Input time series. delta_t numeric. Time resolution (optional). delta_f numeric. Frequency resolution (optional, mutually exclusive logfsteps). logfsteps numeric. Number log-spaced frequency bins (mutually exclusive delta_f). frange numeric vector. Frequency range (Hz). Default: c(30, Nyquist × 8). qrange numeric vector. Q value range (default: c(4, 64)). mismatch numeric. Mismatch tiles (default: 0.2). return_complex Logical. Whether return complex data instead power (default: FALSE).","code":""},{"path":"/reference/qtransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Q-transform of time series — qtransform","text":"list : times Time axis (s) freqs Frequency axis (Hz) q_plane 2D matrix interpolated Q-transform (power complex)","code":""},{"path":"/reference/qtransform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Q-transform of time series — qtransform","text":"ported implementation based original pycbc.filter.qtransform function PyCBC library.","code":""},{"path":"/reference/qtransform.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Q-transform of time series — qtransform","text":"PyCBC source: https://pycbc.org/pycbc/latest/html/_modules/pycbc/filter/qtransform.html","code":""},{"path":"/reference/range_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounded Range with Specified Bin Width — range_width","title":"Rounded Range with Specified Bin Width — range_width","text":"Computes range aligns given bin width, rounding outwards ensure coverage.","code":""},{"path":"/reference/range_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounded Range with Specified Bin Width — range_width","text":"","code":"range_width(x, width)"},{"path":"/reference/range_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounded Range with Specified Bin Width — range_width","text":"x numeric vector. width Numeric. Desired bin width.","code":""},{"path":"/reference/range_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounded Range with Specified Bin Width — range_width","text":"numeric vector length 2 indicating start end adjusted range.","code":""},{"path":"/reference/read_DQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Only the DQ Mask from HDF5 File — read_DQ","title":"Read Only the DQ Mask from HDF5 File — read_DQ","text":"Read DQ Mask HDF5 File","code":""},{"path":"/reference/read_DQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Only the DQ Mask from HDF5 File — read_DQ","text":"","code":"read_DQ(file, dq.level = \"BURST_CAT2\")"},{"path":"/reference/read_DQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Only the DQ Mask from HDF5 File — read_DQ","text":"file character string. Path HDF5 file. dq.level character string. DQ level extract (default: \"BURST_CAT2\"). Use \"\" extract DQ bits.","code":""},{"path":"/reference/read_DQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Only the DQ Mask from HDF5 File — read_DQ","text":"ts object representing DQ mask.","code":""},{"path":"/reference/read_H5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read HDF5 Time Series Data with Data Quality Mask — read_H5","title":"Read HDF5 Time Series Data with Data Quality Mask — read_H5","text":"Reads single-channel strain data HDF5 file along DQ mask.","code":""},{"path":"/reference/read_H5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read HDF5 Time Series Data with Data Quality Mask — read_H5","text":"","code":"read_H5(file, sampling.freq, dq.level = \"BURST_CAT2\")"},{"path":"/reference/read_H5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read HDF5 Time Series Data with Data Quality Mask — read_H5","text":"file character string. Path HDF5 file. sampling.freq numeric scalar. Sampling frequency (Hz) strain data. dq.level character string. DQ level extract (default: \"BURST_CAT2\"). Use \"\" extract DQ bits.","code":""},{"path":"/reference/read_H5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read HDF5 Time Series Data with Data Quality Mask — read_H5","text":"ts object containing strain data following attributes: dqmask ts object length representing DQ mask.","code":""},{"path":"/reference/read_H5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read HDF5 Time Series Data with Data Quality Mask — read_H5","text":"function assumes HDF5 file structure: meta/GPSstart, strain/Strain, quality/simple/DQmask. extracted strain data carry dqmask attribute.","code":""},{"path":"/reference/relpass_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative arrival times of signal at detectors — relpass_time","title":"Relative arrival times of signal at detectors — relpass_time","text":"Compute arrival time delays among detectors given sky position.","code":""},{"path":"/reference/relpass_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative arrival times of signal at detectors — relpass_time","text":"","code":"relpass_time(deltat, dets, ra, dec, t_gps, verbose = T)"},{"path":"/reference/relpass_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative arrival times of signal at detectors — relpass_time","text":"deltat numeric. Time resolution round delays (seconds). dets character vector detector abbreviations. ra numeric. Right Ascension source (radians). dec numeric. Declination source (radians). t_gps numeric. GPS time signal arrival Earth's center. verbose Logical. TRUE, print intermediate results.","code":""},{"path":"/reference/relpass_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative arrival times of signal at detectors — relpass_time","text":"single detector, list time_rel remainder. multiple detectors, list matrix dt_rel, absolute delays dt_earth, remainder.","code":""},{"path":"/reference/relpass_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative arrival times of signal at detectors — relpass_time","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/reproduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","title":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","text":"Recompute processing pipeline specific batch index time, including statistics coincidence analysis. useful pipeline stores latest `proc` due memory constraints.","code":""},{"path":"/reference/reproduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","text":"","code":"reproduce(   batch_set,   batch_at = NULL,   batch_num = NULL,   result,   window_size = NULL,   overlap = NULL )"},{"path":"/reference/reproduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","text":"batch_set list batch Rist objects per detector (output `batching_network()`). batch_at Optional numeric. GPS time (seconds) indicating batch reproduced. batch_num Optional integer. Index batch reproduced. result list returned stream(), containing res.net, arch_params, pipeline results. window_size Optional numeric. Coincidence window size (seconds). NULL, taken result$arch_params. overlap Optional numeric. Overlap size (seconds) coincidence binning. NULL, taken result$arch_params.","code":""},{"path":"/reference/reproduce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","text":"list following components: res.net Updated pipeline result specified batch. coinc.res Coincidence analysis result specified batch. batch_num index reproduced batch.","code":""},{"path":"/reference/reproduce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","text":"one batch_at batch_num must provided. function reconstructs previous state pipeline selected batch, re-executes pipeline coincidence analysis batch.","code":""},{"path":"/reference/reproduce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reproduce the `proc` and coincidence result for a specific batch — reproduce","text":"","code":"if (FALSE) { # \\dontrun{ # Reproduce the 3rd batch out <- reproduce(batch_set = my_batches, batch_num = 3, result = result)  # Or reproduce by time out <- reproduce(batch_set = my_batches, batch_at = 1126259462.5, result = result) } # }"},{"path":"/reference/residual.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute residuals using AR coefficients — residual","title":"Compute residuals using AR coefficients — residual","text":"Compute residuals using AR coefficients","code":""},{"path":"/reference/residual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute residuals using AR coefficients — residual","text":"","code":"residual(x, ar, numCores = parallel::detectCores())"},{"path":"/reference/residual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute residuals using AR coefficients — residual","text":"x Time series data. ar AR coefficients. numCores Number CPU cores use.","code":""},{"path":"/reference/residual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute residuals using AR coefficients — residual","text":"Residual time series.","code":""},{"path":"/reference/resize.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize a `ts` to target length — resize","title":"Resize a `ts` to target length — resize","text":"Resize `ts` target length","code":""},{"path":"/reference/resize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize a `ts` to target length — resize","text":"","code":"resize(ts, nlen)"},{"path":"/reference/resize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize a `ts` to target length — resize","text":"ts `ts` object. nlen integer. Desired length.","code":""},{"path":"/reference/resize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resize a `ts` to target length — resize","text":"resized `ts` object (padded zeros truncated).","code":""},{"path":"/reference/run_dbscan.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DBSCAN clustering on detected anomalies — run_dbscan","title":"Run DBSCAN clustering on detected anomalies — run_dbscan","text":"Applies DBSCAN clustering anomalous points based time observed value.","code":""},{"path":"/reference/run_dbscan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DBSCAN clustering on detected anomalies — run_dbscan","text":"","code":"run_dbscan(   anom.df,   time_col = \"GPS\",   val_col = \"observed\",   eps = 0.01,   minPts = 1,   cluster.col = \"cluster\",   ... )"},{"path":"/reference/run_dbscan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DBSCAN clustering on detected anomalies — run_dbscan","text":"anom.df data.frame tibble containing anomaly detection results, including least columns time, observed value, binary anomaly flag. time_col character string. Name time column (default: \"GPS\"). val_col character string. Name observed value column (default: \"observed\"). eps numeric. Maximum neighborhood radius DBSCAN (default: 0.01). minPts integer. Minimum number points form cluster (default: 1). cluster.col character string. Column name cluster ID assignment (default: \"cluster\"). ... Additional arguments passed dbscan::dbscan().","code":""},{"path":"/reference/run_dbscan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run DBSCAN clustering on detected anomalies — run_dbscan","text":"modified version anom.df new cluster.col column indicating cluster membership.   Anomalies assigned cluster receive value 0. Non-anomalous points assigned NA.","code":""},{"path":"/reference/run_dbscan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run DBSCAN clustering on detected anomalies — run_dbscan","text":"rows anomaly == 1L included clustering. Clustering performed 2D space defined specified time value columns.","code":""},{"path":"/reference/run_dbscan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run DBSCAN clustering on detected anomalies — run_dbscan","text":"","code":"if (FALSE) { # \\dontrun{ df <- tibble::tibble(     GPS = seq(0, 1, length.out = 100),     observed = sin(2 * pi * GPS * 5),     anomaly = sample(0:1, 100, replace = TRUE) ) run_dbscan(df, eps = 0.02) } # }"},{"path":"/reference/sample_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from a fitted distribution based on a population — sample_dist","title":"Sample from a fitted distribution based on a population — sample_dist","text":"Fits appropriate distribution given population using gamlss draws samples fitted model.","code":""},{"path":"/reference/sample_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from a fitted distribution based on a population — sample_dist","text":"","code":"sample_dist(nsample, pop, return_fit = TRUE, seed = NULL)"},{"path":"/reference/sample_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from a fitted distribution based on a population — sample_dist","text":"nsample integer. Number samples generate. pop numeric vector. Population data fit distribution . return_fit Logical (default: TRUE). TRUE, return fitted distribution object. seed optional numeric. Random seed reproducibility.","code":""},{"path":"/reference/sample_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from a fitted distribution based on a population — sample_dist","text":"list elements: sample numeric vector sampled values. fit (Optional) fitted distribution object gamlss::fitDist.","code":""},{"path":"/reference/sample_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample from a fitted distribution based on a population — sample_dist","text":"function uses gamlss automatically fit best candidate distribution (\"realAll\" family) non-missing values pop. draws nsample values distribution. Values filtered ensure non-zero maximum pop.","code":""},{"path":"/reference/sample_dist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample from a fitted distribution based on a population — sample_dist","text":"Requires gamlss gamlss.dist packages.","code":""},{"path":"/reference/sample_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from a fitted distribution based on a population — sample_dist","text":"","code":"if (FALSE) { # \\dontrun{ pop_data <- rlnorm(1000, meanlog = 1, sdlog = 0.5) result <- sample_dist(nsample = 100, pop = pop_data, seed = 42) hist(result$sample) } # }"},{"path":"/reference/sar.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple wrapper for AR fitting — sar","title":"Simple wrapper for AR fitting — sar","text":"Simple wrapper AR fitting","code":""},{"path":"/reference/sar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple wrapper for AR fitting — sar","text":"","code":"sar(ts, ...)"},{"path":"/reference/sar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple wrapper for AR fitting — sar","text":"ts `ts` object. ... Arguments passed `burgar()`.","code":""},{"path":"/reference/sar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple wrapper for AR fitting — sar","text":"Residual `ts` object metadata.","code":""},{"path":"/reference/savefig.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a ggplot Object to File — savefig","title":"Save a ggplot Object to File — savefig","text":"Save ggplot object file using ggpubr::ggexport.","code":""},{"path":"/reference/savefig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a ggplot Object to File — savefig","text":"","code":"savefig(plot, file, width = 8, height = 5, show = T, verbose = F, ...)"},{"path":"/reference/savefig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a ggplot Object to File — savefig","text":"plot ggplot object save. file character string indicating file path. width numeric value indicating width plot (default: 8). height numeric value indicating height plot (default: 5). show Logical; TRUE, display return plot saving. verbose Logical; TRUE, print saving message. ... Additional arguments passed ggpubr::ggexport.","code":""},{"path":"/reference/savefig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a ggplot Object to File — savefig","text":"ggplot object show = TRUE, otherwise NULL.","code":""},{"path":"/reference/savemsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a Message to a Text File — savemsg","title":"Save a Message to a Text File — savemsg","text":"Append message (multiple messages) text file.","code":""},{"path":"/reference/savemsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a Message to a Text File — savemsg","text":"","code":"savemsg(msg, ..., file, show = T)"},{"path":"/reference/savemsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a Message to a Text File — savemsg","text":"msg character string representing message save. ... Additional character strings saved. file character string specifying file path. show Logical; TRUE, print message console.","code":""},{"path":"/reference/savemsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a Message to a Text File — savemsg","text":"None.","code":""},{"path":"/reference/savetab.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a Data Frame as a Markdown-Formatted Table — savetab","title":"Save a Data Frame as a Markdown-Formatted Table — savetab","text":"Save data frame markdown format using insight::export_table.","code":""},{"path":"/reference/savetab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a Data Frame as a Markdown-Formatted Table — savetab","text":"","code":"savetab(   x,   file,   signif = 3,   col.names = F,   row.names = F,   quote = F,   show = T,   append = F,   nsep = 30,   ... )"},{"path":"/reference/savetab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a Data Frame as a Markdown-Formatted Table — savetab","text":"x data.frame save. file character string indicating file path. signif Integer; number significant digits (default: 3). col.names Logical; whether include column names (default: FALSE). row.names Logical; whether include row names (default: FALSE). quote Logical; whether quote value (default: FALSE). show Logical; TRUE, print table content (default: TRUE). append Logical; TRUE, append file (default: FALSE). nsep Integer; number dashes used separate appended tables (default: 30). ... Additional arguments insight::export_table.","code":""},{"path":"/reference/savetab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a Data Frame as a Markdown-Formatted Table — savetab","text":"None.","code":""},{"path":"/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Error for sample — se","title":"Standard Error for sample — se","text":"Standard Error sample","code":""},{"path":"/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Error for sample — se","text":"","code":"se(x)"},{"path":"/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Error for sample — se","text":"x numeric vector.","code":""},{"path":"/reference/se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Error for sample — se","text":"numeric. Sample standard error.","code":""},{"path":"/reference/seqarima.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply sequential ARIMA pipeline — seqarima","title":"Apply sequential ARIMA pipeline — seqarima","text":"Applies pipeline (1) differencing, (2) autoregressive (AR) modeling, (3) moving average smoothing, (4) band-pass filtering.","code":""},{"path":"/reference/seqarima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply sequential ARIMA pipeline — seqarima","text":"","code":"seqarima(   ts,   d = NULL,   p = NULL,   q = NULL,   fl = NULL,   fu = NULL,   ar.aic = TRUE,   ar.collector = \"median\",   ma.collector = \"median\",   ar.args = list(),   ma.args = list(),   bp.args = list(),   return.step = FALSE,   verbose = TRUE )"},{"path":"/reference/seqarima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply sequential ARIMA pipeline — seqarima","text":"ts time series (`ts`) object. d Differencing order. Use 0 differencing, 'auto' KPSS-based auto-differencing. p AR order. Can single integer vector ensemble. q MA order. Can single integer vector ensemble. fl Lower frequency bound band-pass filter. fu Upper frequency bound band-pass filter. ar.aic Logical. Whether use AIC-based AR model selection. ar.collector Collector AR ensemble. One 'mean', 'median', 'pca'. ma.collector Collector MA ensemble. One 'mean', 'median', 'pca'. ar.args named list additional arguments passed `Autoregressive()` function. allows customization AR stage beyond standard parameters used `burgar()`, etc. arguments merged core inputs via `.call()`. ma.args named list additional arguments passed `MovingAverage()` function. enables optional customization MA stage, example supplying `w.func`, custom weights, smoothing parameters. Like `ar.args`, passed using `.call()`. bp.args named list additional arguments passed `BandPass()` function. enables optional customization MA stage, example supplying `resp` `filt_order`, custom filter configurations. return.step Logical. TRUE, intermediate stages returned. verbose Logical. TRUE, messages printed execution.","code":""},{"path":"/reference/seqarima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply sequential ARIMA pipeline — seqarima","text":"`ts` object processed output meta attributes.","code":""},{"path":"/reference/seqarima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply sequential ARIMA pipeline — seqarima","text":"","code":"if (FALSE) { # \\dontrun{ # Generate noisy sinusoid set.seed(123) fs <- 1024 t <- seq(0, 1, by = 1 / fs) x <- sin(2 * pi * 60 * t) + rnorm(length(t), sd = 0.5) ts_obj <- ts(x, start = t[1], frequency = fs)  # Apply sequential ARIMA pipeline out <- seqarima(     ts_obj,     d = 1,     p = c(50, 100, 150),     q = 20,     fl = 30,     fu = 300,     ar.collector = \"median\",     ma.collector = \"mean\",     return.step = TRUE,     verbose = FALSE )  # Plot result plot(out, main = \"Output of seqarima()\")  # View AR model metadata attr(out, \"meta\")$ar_feat } # }"},{"path":"/reference/shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift time series by time offset — shift","title":"Shift time series by time offset — shift","text":"Shift time series time offset","code":""},{"path":"/reference/shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift time series by time offset — shift","text":"","code":"shift(ts, t_shift)"},{"path":"/reference/shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift time series by time offset — shift","text":"ts `ts` object. t_shift numeric. Amount shift (seconds).","code":""},{"path":"/reference/shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift time series by time offset — shift","text":"time-shifted `ts`.","code":""},{"path":"/reference/shift_cyclic.html","id":null,"dir":"Reference","previous_headings":"","what":"Cyclically shift a `ts` — shift_cyclic","title":"Cyclically shift a `ts` — shift_cyclic","text":"Cyclically shift `ts`","code":""},{"path":"/reference/shift_cyclic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cyclically shift a `ts` — shift_cyclic","text":"","code":"shift_cyclic(ts, t_cyclic)"},{"path":"/reference/shift_cyclic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cyclically shift a `ts` — shift_cyclic","text":"ts `ts` object. t_cyclic numeric. Time shift cyclically.","code":""},{"path":"/reference/shift_cyclic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cyclically shift a `ts` — shift_cyclic","text":"cyclic-shifted `ts` object.","code":""},{"path":"/reference/shift_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Align phase of a `ts` to another — shift_phase","title":"Align phase of a `ts` to another — shift_phase","text":"Align phase `ts` another","code":""},{"path":"/reference/shift_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align phase of a `ts` to another — shift_phase","text":"","code":"shift_phase(ts, ref = NULL, phase = NULL)"},{"path":"/reference/shift_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align phase of a `ts` to another — shift_phase","text":"ts `ts` object shifted. ref reference `ts` object (optional). phase numeric phase shift (optional).","code":""},{"path":"/reference/shift_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align phase of a `ts` to another — shift_phase","text":"phase-aligned `ts` object attributes applied shift.","code":""},{"path":"/reference/sigmasq.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate signal loudness (sigma squared) — sigmasq","title":"Estimate signal loudness (sigma squared) — sigmasq","text":"Computes matched-filter self-inner-product waveform frequency domain.","code":""},{"path":"/reference/sigmasq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate signal loudness (sigma squared) — sigmasq","text":"","code":"sigmasq(   htilde,   psd = NULL,   low_frequency_cutoff = NULL,   high_frequency_cutoff = NULL )"},{"path":"/reference/sigmasq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate signal loudness (sigma squared) — sigmasq","text":"htilde `ts` `fs` object. waveform. psd optional `fs` PSD object. low_frequency_cutoff Lower frequency bound (Hz). high_frequency_cutoff Upper frequency bound (Hz).","code":""},{"path":"/reference/sigmasq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate signal loudness (sigma squared) — sigmasq","text":"Numeric. unnormalized signal power.","code":""},{"path":"/reference/sigmasq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate signal loudness (sigma squared) — sigmasq","text":"https://pycbc.org/pycbc/latest/html/_modules/pycbc/filter/matchedfilter.html#sigmasq","code":""},{"path":"/reference/sinking.html","id":null,"dir":"Reference","previous_headings":"","what":"Save console output to a file — sinking","title":"Save console output to a file — sinking","text":"Redirects printed output expression file using sink().","code":""},{"path":"/reference/sinking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save console output to a file — sinking","text":"","code":"sinking(expr, file)"},{"path":"/reference/sinking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save console output to a file — sinking","text":"expr R expression evaluate capture output . file character string. File path save console output.","code":""},{"path":"/reference/sinking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save console output to a file — sinking","text":"None. console output expr written file.","code":""},{"path":"/reference/sinking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save console output to a file — sinking","text":"","code":"if (FALSE) { # \\dontrun{ sinking(summary(cars), \"summary.txt\") } # }"},{"path":"/reference/sprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Formatted String Using cat and sprintf — sprint","title":"Print Formatted String Using cat and sprintf — sprint","text":"Print string combining sprintf() cat().","code":""},{"path":"/reference/sprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Formatted String Using cat and sprintf — sprint","text":"","code":"sprint(..., sep = \"\")"},{"path":"/reference/sprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Formatted String Using cat and sprintf — sprint","text":"... Arguments passed sprintf. sep character string separate values (default: \"\").","code":""},{"path":"/reference/sprint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Formatted String Using cat and sprintf — sprint","text":"None.","code":""},{"path":"/reference/stat_anom.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute anomaly cluster statistics — stat_anom","title":"Compute anomaly cluster statistics — stat_anom","text":"Given `proc` data frame containing anomaly labels cluster assignments, function calculates summary statistics cluster, including cluster center time, number anomalies, inter-cluster lag time. also computes global statistics estimated anomaly rate per cluster (\\(\\lambda_a\\)) cluster rate per second (\\(\\lambda_c\\)).","code":""},{"path":"/reference/stat_anom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute anomaly cluster statistics — stat_anom","text":"","code":"stat_anom(proc, last_tcen = NULL)"},{"path":"/reference/stat_anom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute anomaly cluster statistics — stat_anom","text":"proc data frame containing anomaly detection results least columns `anomaly`, `cluster`, `GPS`. last_tcen Optional numeric. center time last cluster previous batch (used compute `t_lag`).","code":""},{"path":"/reference/stat_anom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute anomaly cluster statistics — stat_anom","text":"list following elements: table data frame per-cluster statistics: `cluster`, `t_cen` (cluster center time), `N_anom` (number anomalies), `t_lag` (inter-cluster lag). stats list global statistics: `t_batch` (batch duration seconds), `N_cl` (number clusters), `N_anom` (total anomalies), `lambda_a`, `lambda_c`. last_tcen last computed cluster center time (used streaming).","code":""},{"path":"/reference/str.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Structure Summary for `fs` Object — str.fs","title":"Custom Structure Summary for `fs` Object — str.fs","text":"Displays concise structural summary `fs` object, highlighting class delta_f.","code":""},{"path":"/reference/str.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Structure Summary for `fs` Object — str.fs","text":"","code":"# S3 method for class 'fs' str(x)"},{"path":"/reference/str.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Structure Summary for `fs` Object — str.fs","text":"x `fs` object.","code":""},{"path":"/reference/str.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Structure Summary for `fs` Object — str.fs","text":"None. Prints structure console.","code":""},{"path":"/reference/stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Run full anomaly detection stream over multiple batches — stream","title":"Run full anomaly detection stream over multiple batches — stream","text":"Executes anomaly detection pipeline across sequence batches multiple detectors. batch, applies pipe_net function, accumulates detection results, performs coincidence analysis, optionally incorporates pre-trained models.","code":""},{"path":"/reference/stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run full anomaly detection stream over multiple batches — stream","text":"","code":"stream(batch_set, arch_params, use_model = NA)"},{"path":"/reference/stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run full anomaly detection stream over multiple batches — stream","text":"batch_set list batches, element named list ts objects per detector. arch_params list architecture configuration parameters. Typically created config_pipe. use_model (Optional) named list pre-trained per-detector statistics initialize ustat. Default NA, meaning pretrained model.","code":""},{"path":"/reference/stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run full anomaly detection stream over multiple batches — stream","text":"named list containing: res.net Final detector-wise detection results. coinc.lis List coincidence analysis results per batch. model Final per-detector accumulated statistics (.e., last ustat). arch_params configuration object used run. lambda_plot List plots \\(\\lambda_a\\) \\(\\lambda_c\\). summary Final per-detector statistical summary data.frame. eta List elapsed times (seconds) batch.","code":""},{"path":"/reference/stream.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run full anomaly detection stream over multiple batches — stream","text":"function initializes pipeline via init_pipe, registers parallel execution foreach using SOCK cluster, iteratively calls pipe_net batch. processing batches, aggregates per-detector statistics, terminates parallel backend, visualizes lambda trajectories via plot_lambda. output model can reused use_model transfer learning.","code":""},{"path":"/reference/stream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run full anomaly detection stream over multiple batches — stream","text":"","code":"if (FALSE) { # \\dontrun{ # Assume batch_set and arch_params are prepared result <- stream(batch_set, arch_params) result$summary # Show summary statistics result$model # Save model for reuse } # }"},{"path":"/reference/suppressALL.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress all output, messages, and warnings — suppressALL","title":"Suppress all output, messages, and warnings — suppressALL","text":"Executes expression suppressing output, including messages, warnings, printed output.","code":""},{"path":"/reference/suppressALL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress all output, messages, and warnings — suppressALL","text":"","code":"suppressALL(expr)"},{"path":"/reference/suppressALL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress all output, messages, and warnings — suppressALL","text":"expr R expression evaluate.","code":""},{"path":"/reference/suppressALL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress all output, messages, and warnings — suppressALL","text":"(invisible) result evaluated expression.","code":""},{"path":"/reference/suppressALL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress all output, messages, and warnings — suppressALL","text":"","code":"if (FALSE) { # \\dontrun{ suppressALL({     warning(\"This is suppressed\")     message(\"Also suppressed\")     print(\"This too\") }) } # }"},{"path":"/reference/sys_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Contents of a File to Console — sys_cat","title":"Print Contents of a File to Console — sys_cat","text":"Print contents file using system cat.","code":""},{"path":"/reference/sys_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Contents of a File to Console — sys_cat","text":"","code":"sys_cat(file)"},{"path":"/reference/sys_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Contents of a File to Console — sys_cat","text":"file character string specifying file path.","code":""},{"path":"/reference/sys_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Contents of a File to Console — sys_cat","text":"None.","code":""},{"path":"/reference/tf.html","id":null,"dir":"Reference","previous_headings":"","what":"Final timestamp of a time series — tf","title":"Final timestamp of a time series — tf","text":"Final timestamp time series","code":""},{"path":"/reference/tf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final timestamp of a time series — tf","text":"","code":"tf(ts, n = 1)"},{"path":"/reference/tf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Final timestamp of a time series — tf","text":"ts `ts` object. n numeric (default: 1). Number final timestamps return.","code":""},{"path":"/reference/tf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Final timestamp of a time series — tf","text":"numeric vector length `n`.","code":""},{"path":"/reference/ti.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial timestamp of a time series — ti","title":"Initial timestamp of a time series — ti","text":"Initial timestamp time series","code":""},{"path":"/reference/ti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial timestamp of a time series — ti","text":"","code":"ti(ts, n = 1)"},{"path":"/reference/ti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial timestamp of a time series — ti","text":"ts `ts` object. n numeric (default: 1). Number initial timestamps return.","code":""},{"path":"/reference/ti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial timestamp of a time series — ti","text":"numeric vector length `n`.","code":""},{"path":"/reference/tl.html","id":null,"dir":"Reference","previous_headings":"","what":"Duration of a time series — tl","title":"Duration of a time series — tl","text":"Duration time series","code":""},{"path":"/reference/tl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duration of a time series — tl","text":"","code":"tl(ts)"},{"path":"/reference/tl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duration of a time series — tl","text":"ts `ts` object.","code":""},{"path":"/reference/tl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duration of a time series — tl","text":"numeric value indicating duration seconds.","code":""},{"path":"/reference/to_fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Time Series (`ts`) to Frequency Series (`fs`) — to_fs","title":"Convert Time Series (`ts`) to Frequency Series (`fs`) — to_fs","text":"Transforms time series object frequency series computing FFT.","code":""},{"path":"/reference/to_fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Time Series (`ts`) to Frequency Series (`fs`) — to_fs","text":"","code":"to_fs(ts, delta_f = NULL)"},{"path":"/reference/to_fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Time Series (`ts`) to Frequency Series (`fs`) — to_fs","text":"ts `ts` object. delta_f Optional. numeric value indicating desired frequency resolution. NULL, defaults `sampling.freq / length(ts)`.","code":""},{"path":"/reference/to_fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Time Series (`ts`) to Frequency Series (`fs`) — to_fs","text":"`fs` object containing frequency-domain representation metadata.","code":""},{"path":"/reference/to_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Fourier transform of `fs` object — to_ts","title":"Inverse Fourier transform of `fs` object — to_ts","text":"Inverse Fourier transform `fs` object","code":""},{"path":"/reference/to_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Fourier transform of `fs` object — to_ts","text":"","code":"to_ts(fs, start = 0, delta_t = NULL)"},{"path":"/reference/to_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Fourier transform of `fs` object — to_ts","text":"fs `fs` object. start numeric. Start time (default: 0 `attr(fs, \"ti\")`). delta_t numeric. Time step. NULL, use natural resolution.","code":""},{"path":"/reference/to_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Fourier transform of `fs` object — to_ts","text":"`ts` object time domain.","code":""},{"path":"/reference/tr.html","id":null,"dir":"Reference","previous_headings":"","what":"Time range of a time series — tr","title":"Time range of a time series — tr","text":"Time range time series","code":""},{"path":"/reference/tr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time range of a time series — tr","text":"","code":"tr(ts)"},{"path":"/reference/tr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time range of a time series — tr","text":"ts `ts` object.","code":""},{"path":"/reference/tr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time range of a time series — tr","text":"numeric vector length 2: c(start, end).","code":""},{"path":"/reference/tr_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","title":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","text":"Calculates number samples discard head tail time series applying ARIMA(p, d, q) filtering, order avoid boundary artifacts.","code":""},{"path":"/reference/tr_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","text":"","code":"tr_overlap(d, p, q, split = F)"},{"path":"/reference/tr_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","text":"d integer vector. Differencing order(s). Typically 0, 1, 2. p integer vector. Autoregressive order(s). q integer vector. Moving average order(s). split Logical (default: FALSE). TRUE, returns named vector head tail overlap lengths.","code":""},{"path":"/reference/tr_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","text":"split = FALSE, single numeric value indicating total overlap length (Mh + Mt).         split = TRUE, named numeric vector components:         Mh (head overlap) Mt (tail overlap).","code":""},{"path":"/reference/tr_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","text":"head overlap given Mh = max(d) + max(p) + floor(q / 2), tail overlap Mt = floor(q / 2).","code":""},{"path":"/reference/tr_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute temporal overlap for ARIMA-based filtering — tr_overlap","text":"","code":"if (FALSE) { # \\dontrun{ tr_overlap(d = 1, p = 500, q = 1000) tr_overlap(d = 1, p = 500, q = 1000, split = TRUE) } # }"},{"path":"/reference/transpose.List.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape a list-of-lists by transposing elements — transpose.List","title":"Reshape a list-of-lists by transposing elements — transpose.List","text":"function reshapes list named lists named list lists, effectively performing transpose operation. equivalent `purrr::list_transpose()`, implemented base R minimal code.","code":""},{"path":"/reference/transpose.List.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape a list-of-lists by transposing elements — transpose.List","text":"","code":"transpose.List(list)"},{"path":"/reference/transpose.List.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape a list-of-lists by transposing elements — transpose.List","text":"list list named lists. sub-list must names.","code":""},{"path":"/reference/transpose.List.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape a list-of-lists by transposing elements — transpose.List","text":"named list lists, outer inner structure transposed.","code":""},{"path":"/reference/transpose.List.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape a list-of-lists by transposing elements — transpose.List","text":"","code":"if (FALSE) { # \\dontrun{ x <- list(     list(a = 1, b = 2),     list(a = 3, b = 4) ) transpose.List(x) # Returns: list(a = list(1, 3), b = list(2, 4)) } # }"},{"path":"/reference/travel_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Light travel time between detectors — travel_times","title":"Light travel time between detectors — travel_times","text":"Computes pairwise light-travel times gravitational-wave detectors.","code":""},{"path":"/reference/travel_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Light travel time between detectors — travel_times","text":"","code":"travel_times(dets = c(\"H1\", \"L1\", \"V1\", \"K1\"))"},{"path":"/reference/travel_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Light travel time between detectors — travel_times","text":"dets character vector detector abbreviations (e.g., c(\"H1\", \"L1\")).","code":""},{"path":"/reference/travel_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Light travel time between detectors — travel_times","text":"data frame light-travel times (upper triangular ).","code":""},{"path":"/reference/travel_times.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Light travel time between detectors — travel_times","text":"function interfaces Python's pycbc library using reticulate. Please ensure required Python packages available environment.","code":""},{"path":"/reference/ts_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert `ts` to data frame with time column — ts_df","title":"Convert `ts` to data frame with time column — ts_df","text":"Convert `ts` data frame time column","code":""},{"path":"/reference/ts_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert `ts` to data frame with time column — ts_df","text":"","code":"ts_df(ts, tzero = 0, val.name = \"x\")"},{"path":"/reference/ts_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert `ts` to data frame with time column — ts_df","text":"ts `ts` object. tzero numeric (default: 0). Time shift. val.name character. Name value column (default: \"x\").","code":""},{"path":"/reference/ts_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert `ts` to data frame with time column — ts_df","text":"data frame columns time value.","code":""},{"path":"/reference/tsfy.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to `ts` object using a reference — tsfy","title":"Convert to `ts` object using a reference — tsfy","text":"Convert `ts` object using reference","code":""},{"path":"/reference/tsfy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to `ts` object using a reference — tsfy","text":"","code":"tsfy(obj, ref, sampling.freq = NULL, na.rm = T)"},{"path":"/reference/tsfy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to `ts` object using a reference — tsfy","text":"obj vector, list, data frame. ref `ts` object, time vector, list specifying reference time. sampling.freq Optional frequency `ref` numeric. na.rm Logical. TRUE, remove NA values (default: TRUE).","code":""},{"path":"/reference/tsfy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to `ts` object using a reference — tsfy","text":"`ts` object list `ts` objects.","code":""},{"path":"/reference/uniqdif.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper of unique(diff(x)) with tolerance check — uniqdif","title":"Wrapper of unique(diff(x)) with tolerance check — uniqdif","text":"Wrapper unique(diff(x)) tolerance check","code":""},{"path":"/reference/uniqdif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper of unique(diff(x)) with tolerance check — uniqdif","text":"","code":"uniqdif(x, tol = 1e-08)"},{"path":"/reference/uniqdif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper of unique(diff(x)) with tolerance check — uniqdif","text":"x numeric vector. tol numeric tolerance detecting non-uniform spacing. Default 1e-8.","code":""},{"path":"/reference/uniqdif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper of unique(diff(x)) with tolerance check — uniqdif","text":"numeric value uniform, vector unique differences otherwise.","code":""},{"path":"/reference/unit_denormalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Denormalize a unit-normalized `ts` object — unit_denormalize","title":"Denormalize a unit-normalized `ts` object — unit_denormalize","text":"Restores original scale normalized time series. scale factor retrieved \"order\" attribute input ts, optionally provided directly.","code":""},{"path":"/reference/unit_denormalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Denormalize a unit-normalized `ts` object — unit_denormalize","text":"","code":"unit_denormalize(ts, order = NULL)"},{"path":"/reference/unit_denormalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Denormalize a unit-normalized `ts` object — unit_denormalize","text":"ts normalized `ts` object. order Optional numeric. provided, used scale factor.","code":""},{"path":"/reference/unit_denormalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Denormalize a unit-normalized `ts` object — unit_denormalize","text":"`ts` object restored original scale.","code":""},{"path":"/reference/unit_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a `ts` to unit scale — unit_normalize","title":"Normalize a `ts` to unit scale — unit_normalize","text":"Normalize `ts` unit scale","code":""},{"path":"/reference/unit_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a `ts` to unit scale — unit_normalize","text":"","code":"unit_normalize(ts)"},{"path":"/reference/unit_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a `ts` to unit scale — unit_normalize","text":"ts `ts` object.","code":""},{"path":"/reference/unit_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a `ts` to unit scale — unit_normalize","text":"normalized `ts` object. Scale factor stored attr(..., \"order\").","code":""},{"path":"/reference/update_logic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update logic for statistics with optional P0-based filtering — update_logic","title":"Update logic for statistics with optional P0-based filtering — update_logic","text":"Updates pipeline statistics using accumulated (`updated`) current (`current`) values. `P_update` specified, filters anomalies `proc` based whether significance (`P0`) threshold, recomputes `current` update.","code":""},{"path":"/reference/update_logic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update logic for statistics with optional P0-based filtering — update_logic","text":"","code":"update_logic(updated, current, P_update)"},{"path":"/reference/update_logic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update logic for statistics with optional P0-based filtering — update_logic","text":"updated list previously accumulated statistics (`update_stat()`), `NA` first batch. current list current statistics (`stat_anom()`), `NA`. P_update numeric threshold. `NULL`, anomalies `P0 < P_update` discarded updating.","code":""},{"path":"/reference/update_logic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update logic for statistics with optional P0-based filtering — update_logic","text":"list updated statistics merging `updated` `current`.","code":""},{"path":"/reference/update_logic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update logic for statistics with optional P0-based filtering — update_logic","text":"function assumes `proc` (current batch output `P0`) `prev_tcen` available parent frame.","code":""},{"path":"/reference/update_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Update accumulated cluster-level statistics — update_stat","title":"Update accumulated cluster-level statistics — update_stat","text":"Updates global cluster statistics combining previous accumulated statistics (`upd`) current batch statistics (`cur`). quantities updated include batch duration, number clusters, number anomalies, derived rates \\(\\lambda_c\\) (cluster rate) \\(\\lambda_a\\) (anomaly rate).","code":""},{"path":"/reference/update_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update accumulated cluster-level statistics — update_stat","text":"","code":"update_stat(upd, cur)"},{"path":"/reference/update_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update accumulated cluster-level statistics — update_stat","text":"upd list containing previous cumulative statistics (`stat_anom()`), must contain `stats`. cur list containing statistics current batch (`stat_anom()`), must contain `stats`.","code":""},{"path":"/reference/update_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update accumulated cluster-level statistics — update_stat","text":"list single element `stats`, containing: t_batch Cumulative batch duration. N_cl Cumulative number detected clusters. N_anom Cumulative number detected anomalies. lambda_c Updated cluster rate per second. lambda_a Updated average anomaly count per cluster.","code":""},{"path":"/reference/utc2gps.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert UTC to GPS time — utc2gps","title":"Convert UTC to GPS time — utc2gps","text":"Convert UTC GPS time","code":""},{"path":"/reference/utc2gps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert UTC to GPS time — utc2gps","text":"","code":"utc2gps(y, origin = as.POSIXct(\"1980-01-06 00:00:00\", tz = \"UTC\"))"},{"path":"/reference/utc2gps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert UTC to GPS time — utc2gps","text":"y character. UTC time string. origin POSIXct (default: .POSIXct(\"1980-01-06 00:00:00\", tz = \"UTC\"))","code":""},{"path":"/reference/utc2gps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert UTC to GPS time — utc2gps","text":"numeric. GPS time.","code":""},{"path":"/reference/vf.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple final value extractor — vf","title":"Simple final value extractor — vf","text":"Simple final value extractor","code":""},{"path":"/reference/vf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple final value extractor — vf","text":"","code":"vf(x, n = 1)"},{"path":"/reference/vf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple final value extractor — vf","text":"x vector. n numeric (default: 1). Number final values extract.","code":""},{"path":"/reference/vf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple final value extractor — vf","text":"vector last n elements.","code":""},{"path":"/reference/vi.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple initial value extractor — vi","title":"Simple initial value extractor — vi","text":"Simple initial value extractor","code":""},{"path":"/reference/vi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple initial value extractor — vi","text":"","code":"vi(x, n = 1)"},{"path":"/reference/vi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple initial value extractor — vi","text":"x vector. n numeric (default: 1). Number initial values extract.","code":""},{"path":"/reference/vi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple initial value extractor — vi","text":"vector first n elements.","code":""},{"path":"/reference/vl.html","id":null,"dir":"Reference","previous_headings":"","what":"Length from first to last value — vl","title":"Length from first to last value — vl","text":"Length first last value","code":""},{"path":"/reference/vl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length from first to last value — vl","text":"","code":"vl(x)"},{"path":"/reference/vl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length from first to last value — vl","text":"x vector.","code":""},{"path":"/reference/vl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length from first to last value — vl","text":"numeric. Difference last first element.","code":""},{"path":"/reference/vr.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple range extractor — vr","title":"Simple range extractor — vr","text":"Simple range extractor","code":""},{"path":"/reference/vr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple range extractor — vr","text":"","code":"vr(x)"},{"path":"/reference/vr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple range extractor — vr","text":"x vector.","code":""},{"path":"/reference/vr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple range extractor — vr","text":"vector length 2, containing first last element.","code":""},{"path":"/reference/weighted_inner.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted inner product — weighted_inner","title":"Weighted inner product — weighted_inner","text":"Computes inner product `x` `y` inverse-variance weighting.","code":""},{"path":"/reference/weighted_inner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted inner product — weighted_inner","text":"","code":"weighted_inner(x, y, wt)"},{"path":"/reference/weighted_inner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted inner product — weighted_inner","text":"x numeric complex vector. y numeric complex vector. wt numeric weight vector (length `x`, `y`).","code":""},{"path":"/reference/weighted_inner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted inner product — weighted_inner","text":"Complex scalar. Weighted inner product.","code":""},{"path":"/reference/whiten.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectral Whitening — whiten","title":"Spectral Whitening — whiten","text":"Spectral Whitening","code":""},{"path":"/reference/whiten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectral Whitening — whiten","text":"","code":"whiten(ts, sl, fl, fu, ...)"},{"path":"/reference/whiten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectral Whitening — whiten","text":"ts `ts` object. sl numeric. segment length estimating `psd`. fl numeric. lower-frequency-cutoff `bandpass`. fu numeric. upper-frequency-cutoff `bandpass`. ... Additional arguments `bandpass()`.","code":""},{"path":"/reference/whiten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spectral Whitening — whiten","text":"`ts` object. Whitened time series.","code":""},{"path":"/reference/window_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Handy window function — window_to","title":"Handy window function — window_to","text":"Handy window function","code":""},{"path":"/reference/window_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handy window function — window_to","text":"","code":"window_to(ts, ref)"},{"path":"/reference/window_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handy window function — window_to","text":"ts time series (`ts`) object. ref time series (`ts`) vector containing initial time final time.","code":""},{"path":"/reference/window_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handy window function — window_to","text":"windowed time series (`ts`) object.","code":""},{"path":"/reference/write_H5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a time series and metadata into HDF5 format — write_H5","title":"Write a time series and metadata into HDF5 format — write_H5","text":"Write time series metadata HDF5 format","code":""},{"path":"/reference/write_H5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a time series and metadata into HDF5 format — write_H5","text":"","code":"write_H5(file, tsobj, meta.list = NULL)"},{"path":"/reference/write_H5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a time series and metadata into HDF5 format — write_H5","text":"file Path output HDF5 file. tsobj time series object class `ts` (e.g., output `ts()`). meta.list named list additional metadata store. Names full HDF5 paths (e.g., \"quality/simple/DQmask\").","code":""},{"path":"/reference/write_H5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a time series and metadata into HDF5 format — write_H5","text":"Invisibly returns HDF5 file path.","code":""}]
