% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seqARIMA.R
\name{burgar}
\alias{burgar}
\title{AR burg method
 This function does not return "asy.var.coef" which takes long computation time
when `order.max` is very large.
 Also, for calculating 'residual (resid)', custom embed function written in C++
will be used for minimizing the running time.}
\usage{
burgar(
  x,
  ic = TRUE,
  order.max = NULL,
  na.action = na.fail,
  demean = TRUE,
  series = NULL,
  var.method = 2L,
  numCores = NULL,
  ...
)
}
\arguments{
\item{ic}{A logical or character. If `ic=TRUE`, default AIC computation method
will be used. Or if `ic="AIC"`, or `ic="BIC"`, the given information
criteria will be used as its definition.}

\item{order.max}{A numeric. The maximum order of AR. If `ic=FALSAE`, the model
of `order.max` will be chosen.}

\item{na.action}{function to be called to handle missing values. Currently,
via na.action = na.pass, only Yule-Walker method can handle
missing values which must be consistent within a time point:
either all variables must be missing or none.}

\item{demean}{should a mean be estimated during fitting?}

\item{series}{names for the series. Defaults to deparse1(substitute(x)).}

\item{var.method}{A numeric (default: 2). the method to estimate the innovations variance (see ‘Details’).}

\item{...}{additional arguments for specific methods.}

\item{ts}{A time series (`ts`) object.}
}
\value{
A list of AR object.
}
\description{
AR burg method
 This function does not return "asy.var.coef" which takes long computation time
when `order.max` is very large.
 Also, for calculating 'residual (resid)', custom embed function written in C++
will be used for minimizing the running time.
}
