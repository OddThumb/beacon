% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pipe.R
\name{pipe_net}
\alias{pipe_net}
\title{Run anomaly detection pipeline over detector network}
\usage{
pipe_net(
  batch_net,
  prev_batch,
  res.net,
  coinc.lis,
  arch_params,
  update_model = TRUE,
  verb = TRUE,
  debug = FALSE
)
}
\arguments{
\item{batch_net}{A named list of current batches per detector. Each element is a \code{ts} object.}

\item{prev_batch}{A named list of previous batches per detector (used for continuity in AR/MA).}

\item{res.net}{A named list of results (updated per detector).}

\item{coinc.lis}{A list of previous coincidence results (will be appended).}

\item{arch_params}{A list of pipeline configuration parameters; see \code{\link{config_pipe}}.}

\item{update_model}{Logical. Whether to update internal statistics across batches.}

\item{verb}{Logical. If \code{TRUE}, print lambda diagnostics.}

\item{debug}{Logical. If \code{TRUE}, runs sequentially for debugging (no parallelism).}
}
\value{
This function updates the following in the parent environment:
\itemize{
  \item \code{res.net}: Updated detection results per detector.
  \item \code{prev_batch}: Updated previous batch list for the next call.
  \item \code{coinc.lis}: Appended coincidence analysis result.
}
These objects are expected to be initialized beforehand (e.g., via \code{\link{init_pipe}}).
}
\description{
This function applies the single-detector \code{pipe()} function across a network of detectors
(e.g., H1 and L1), managing parallel execution, results updating, and coincidence analysis.
}
\details{
For each detector, the function calls the internal \code{\link{pipe}} function with the current batch,
previous batch, and accumulated results. Parallel execution is performed via \code{foreach + dopar}
unless \code{debug = TRUE}, in which case it runs sequentially.

Coincidence analysis is conducted using \code{\link{coincide_P0}} when all detectors have valid results.
}
\examples{
# Run detection pipeline over current batch
pipe_net(batch_net, prev_batch, res.net, coinc.lis, arch_params)

}
