% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pipe.R
\name{coincide_P0}
\alias{coincide_P0}
\title{Coincidence Analysis Using P0 Statistics}
\usage{
coincide_P0(
  shift.proc,
  ref.proc,
  n_shift = NULL,
  window_size,
  overlap = 0.5,
  step_size = (1 - overlap) * window_size,
  mean.func = har.mean,
  p_col = "P0_BURST_CAT2",
  return = 1L
)
}
\arguments{
\item{shift.proc}{A \code{data.table} of detection statistics from the detector to be time-shifted (e.g., H1). Must contain \code{time} and a P0 column.}

\item{ref.proc}{A \code{data.table} of detection statistics from the reference detector (e.g., L1). Must contain \code{time} and a P0 column.}

\item{n_shift}{Optional integer. Number of samples to cyclically shift \code{shift.proc} in time.}

\item{window_size}{Integer. The size of each coincidence window (number of samples).}

\item{overlap}{Numeric (default: 0.5). Overlap ratio between consecutive windows. Must be between 0 and 1.}

\item{step_size}{Integer. Step size between windows. Defaults to \code{(1 - overlap) * window_size}.}

\item{mean.func}{A function or a named list of functions to aggregate P0 values within a window (e.g., \code{har.mean}, \code{mean}).}

\item{p_col}{Character. Name of the P0 column in both \code{shift.proc} and \code{ref.proc}.}

\item{return}{Integer. Controls the output format:
\code{1}: return the aggregated coincidence result only.
\code{2}: return a list with both \code{joined} time-aligned samples and the final \code{result}.}
}
\value{
Depending on the value of \code{return}, either a data.table of coincidence results, or a list containing both \code{joined} and \code{result} tables.
}
\description{
Perform coincidence analysis between two detectors (e.g., H1 and L1) by computing bin-wise joint probability statistics based on false alarm probabilities (P0). This is useful for detecting temporally aligned anomalies across detectors.
}
\details{
The function first aligns and optionally shifts the time series from one detector, joins them on the time column, bins the data into overlapping windows, applies an aggregation function to the P0 values, and computes the joint P0 by multiplying the aggregated values.
}
