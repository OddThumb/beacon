% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IO.R
\name{get_dqmask}
\alias{get_dqmask}
\title{Reconstruct dqmask as a ts or mts object}
\usage{
get_dqmask(obj)
}
\arguments{
\item{obj}{An R object (e.g. returned by \code{read_H5()}) containing
an attribute named \code{"dqmask"}, which is either a numeric vector
or a numeric matrix/array (multi‑series).}
}
\value{
A \code{ts} object for univariate data or \code{mts} object for
  multivariate data, reconstructed using \code{tsp} and with
  the original \code{"level"} attribute re‑attached. Returns \code{NULL}
  if \code{dqmask} is missing or \code{NULL}.
}
\description{
Converts the `dqmask` metadata attribute stored in an object (typically removed
from `ts` class during storage) back to a formal time‑series (`ts` or `mts`) object.
Uses the stored `tsp` attribute (or fallback to the parent object’s `tsp`)
to reconstruct the appropriate start, end, and frequency information.
}
\details{
This helper retrieves \code{dqmask} from \code{obj}, determines the appropriate
time-series parameters via \code{tsp(obj)} or \code{tsp(dqmask)}, and then recreates
the time-series using \code{\link[stats]{ts}()}. The original
\code{"level"} attribute (e.g. \code{"all"} vs specific level) is preserved.
}
\examples{
\dontrun{
# Example for univariate case:
res <- read_H5("example.h5", sampling.freq = 1000, dq.level = "CAT1")
dq_ts <- get_dqmask(res)
print(dq_ts)

# Example for multivariate case:
res2 <- read_H5("example_multi.h5", sampling.freq = 1000, dq.level = "all")
dq_ts2 <- get_dqmask(res2)
str(dq_ts2)
}
}
